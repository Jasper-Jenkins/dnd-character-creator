{"version":3,"sources":["helper/helper-functions.js","Info.js","AbilityScoresForm.js","ClassProficiencies.js","ClassSpells.js","champion/Races.js","champion/Classes.js","Selection.js","Navigation.js","helper/Alert.js","CreateCharacter.js","App.js","index.js"],"names":["isSelected","obj","key","hasOwnProperty","InfoDisplay","raceName","className","hit_die","ability_bonuses","abilityScores","saving_throws","characterProficiencies","Info","props","raceSelected","classSelected","abilityScoresInfo","proficiencies","spellsChosen","selectedSpell","setSelectedSpell","classSpells","bonuses","abilities","Object","keys","abilityScoresSelected","map","ability","console","log","name","bonus","index","i","length","full_name","toLowerCase","saving_throw","j","proficiency","spell","onClick","navigation","spellDescription","undefined","desc","level","AbilityScoresForm","handleFocus","event","target","select","handleChange","value","scores","state","newScores","JSON","parse","stringify","parseInt","setState","submitForm","handleSubmit","initialState","this","htmlFor","type","id","onChange","onFocus","Component","ClassProficiencies","addProficiency","proficiencyName","choicesIndex","proficienciesChosen","choices","proficiency_choices","from","choose","updateAlertMessage","newProficiency","filter","newProfs","chosen","setProficiencies","removeProficiency","a","b","newProficiencies","newChoices","bind","numberOfCategories","chooseFrom","chooseProficiencies","k","push","classProficienciesToChooseFrom","ClassSpells","spellSlots","levelData","slotsAvailable","h","class","spellcasting","cantrips_known","updateSpellSlots","updateSpells","spells","setSpells","spellsChosenByLevel","cantrips","levelOneSpells","spellSource","currentLevel","level0","level1","message","setClassSpells","spellsInfo","classes","alert","addSpell","removeSpell","displaySpells","spellChoices","slotLevel","slotSpells","classNames","damage","damage_type","spellChoiceDisplay","CharacterRace","buttons","selectRace","racesInfo","setRace","race","races","results","aria-disabled","CharacterClass","selectClass","classesInfo","setClass","cClass","characterClass","Selection","getScore","abilityScore","Navigation","navigationCategories","navigate","navButtons","category","tabIndex","UserAlert","element","alertMessage","CreateCharacter","abilityScoresSetup","abilityScoresData","count","fadeMessage","alertNode","document","getElementById","setTimeout","fade","setInterval","style","opacity","clearInterval","slots","randomDiceRoll","maxNum","abilityPoint","abilityPoints","abilityPointsArray","Math","floor","random","sort","splice","totalDiceRolls","startingProficiencies","updateProficiencies","proficienciesChoices","noZeroes","zeroesAlert","chosenRace","chosenClass","App","readyToCreate","data","getPrototypeOf","constructor","features","featuresInfo","url","fetch","then","result","json","getInfo","catch","e","levels","info","getLevelData","ReactDOM","render"],"mappings":"6QAAe,SAASA,EAAWC,GAC/B,IAAK,IAAIC,KAAOD,EAEZ,OADAA,EAAIE,eAAeD,IACZ,EAEX,OAAO,ECAX,SAASE,EAAYC,EAAUC,EAAWC,EAASC,EAAiBC,EAAeC,EAAeC,GAC9F,OAAQ,yBAAKL,UAAU,eACnB,yBAAKA,UAAU,OACX,yBAAKA,UAAU,yBACX,4BAAKD,EAAL,IAAgBC,IAEpB,yBAAKA,UAAU,SACX,mDAAgC,6BAChC,4BAAKE,GACL,oDACA,yBAAKF,UAAU,OACVG,IAGT,yBAAKH,UAAU,SACX,6CAA2BC,EAAQ,6BACnC,iDAA8B,6BAC9B,4BAAKG,GACL,iDACA,4BACKC,MAqBrB,IAgJeC,EAhJF,SAACC,GAAU,IAEZC,EAAiBD,EAAjBC,aACAC,EAAkBF,EAAlBE,cACAC,EAAsBH,EAAtBG,kBACAC,EAAkBJ,EAAlBI,cACAC,EAAiBL,EAAjBK,aACAC,EAAkBN,EAAlBM,cACAC,EAAqBP,EAArBO,iBAEJf,EAAW,GACXC,EAAY,GACZC,EAAU,GACVC,EAAkB,GAClBE,EAAgB,GAChBC,EAAyB,GACzBU,EAAc,GAGdC,EAAU,GAEVC,EAAYC,OAAOC,KAAKZ,EAAMa,uBAC9BjB,EAAgBc,EAAUI,KAAI,SAACC,GAE/B,OADAC,QAAQC,IAAI,QACJ,yBAAKxB,UAAU,gCAAgCJ,IAAK0B,GACxD,4BAAKA,GACL,2BAAIf,EAAMa,sBAAsBE,QA+DxC,OA1DI5B,EAAWc,KACXT,EAAWS,EAAaiB,KACxBvB,EAAkBM,EAAaN,gBAAgBmB,KAAI,SAACK,EAAOC,GACvD,IAAK,IAAIC,EAAI,EAAGA,EAAIlB,EAAkBmB,OAAQD,IAC1C,GAAIlB,EAAkBkB,GAAGH,OAASC,EAAMD,KACpC,OAAQ,wBAAI7B,IAAK+B,GAAQjB,EAAkBkB,GAAGE,UAAtC,MAAoDJ,EAAMA,OAG1E,OAAQ,wBAAI9B,IAAK+B,GAAT,sBAEZX,EAAUR,EAAaN,gBAAgBmB,KAAI,SAACK,GACxC,OAAOA,KAEXvB,EAAgBc,EAAUI,KAAI,SAACC,GAC3B,IAAK,IAAIM,EAAI,EAAGA,EAAIZ,EAAQa,OAAQD,IAChC,GAAIZ,EAAQY,GAAGH,KAAKM,gBAAkBT,EAClC,OAAQ,yBAAKtB,UAAU,gCAAgCJ,IAAK0B,GACxD,4BAAKA,GACL,2BAAIf,EAAMa,sBAAsBE,GAAhC,IAA2CN,EAAQY,GAAGF,QAIlE,OAAQ,yBAAK1B,UAAU,gCAAgCJ,IAAK0B,GACxD,4BAAKA,GACL,2BAAIf,EAAMa,sBAAsBE,SAKxC5B,EAAWe,KACXT,EAAYS,EAAcgB,KAC1BxB,EAAUM,EAAME,cAAcR,QAC9BG,EAAgBG,EAAME,cAAcL,cAAciB,KAAI,SAACW,EAAcL,GACjE,IAAK,IAAIM,EAAI,EAAGA,EAAIvB,EAAkBmB,OAAQI,IAC1C,GAAIvB,EAAkBuB,GAAGR,OAASO,EAAaP,KAC3C,OAAQ,wBAAI7B,IAAKoC,EAAaP,KAAKM,eAAgBrB,EAAkBuB,GAAGH,WAGhF,OAAQ,wBAAIlC,IAAK+B,GAAT,sBAEZtB,EAAyBM,EAAcU,KAAI,SAACa,GACxC,OAAQ,wBAAItC,IAAKsC,EAAYT,MAAOS,EAAYT,SAMhDb,EAAaiB,OAAS,IACtBd,EAAcH,EAAaS,KAAI,SAACc,GAC5B,OAAIA,IAAUtB,EACF,wBAAIjB,IAAKuC,EAAMV,MAAOU,EAAMV,MAE5B,wBAAIW,QAAS,kBAAMtB,EAAiBqB,IAAQvC,IAAKuC,EAAMV,MAAOU,EAAMV,WAMpFlB,EAAM8B,YAkBV,IAAK,iBAEL,IAAK,gBACD,OAAOvC,EAAYC,EAAUC,EAAWC,EAASC,EAAiBC,EAAeC,EAAeC,GACpG,IAAK,SAEG,IAAIiC,EADR,OAAI5C,EAAWe,SAEgB8B,IAAvB1B,EAAcY,OAGda,EAAmB,2BAAIzB,EAAc2B,OAEjC,yBAAKxC,UAAU,eACnB,yBAAKA,UAAU,OACX,yBAAKA,UAAU,UACX,4BAAKO,EAAMC,aAAaiB,KAAxB,IAA+BlB,EAAME,cAAcgB,OAEvD,yBAAKzB,UAAU,SACX,qCACA,4BAAKe,IAET,yBAAKf,UAAU,SACX,4BAAKa,EAAcY,KAAnB,IAA0BZ,EAAc4B,OACvCH,MAKL,yBAAKtC,UAAU,eACX,uBAAGA,UAAU,eAAb,0CAGpB,QACI,OAAOF,EAAYC,EAAUC,EAAWC,EAASC,EAAiBC,EAAeC,EAAeC,KCzF7FqC,E,kDA9FX,WAAYnC,GAAQ,IAAD,8BACf,cAAMA,IAcVoC,YAAc,SAACC,GAAD,OAAWA,EAAMC,OAAOC,UAfnB,EAiBnBC,aAAe,SAACH,GAIZ,IAJuB,IAAD,EACEA,EAAMC,OAAtBpB,EADc,EACdA,KAAMuB,EADQ,EACRA,MACNC,EAAW,EAAKC,MAAhBD,OACFE,EAAYC,KAAKC,MAAMD,KAAKE,UAAUL,IACnCrB,EAAI,EAAGA,EAAIuB,EAAUtB,OAAQD,IAC9BuB,EAAUvB,GAAGH,OAASA,IAElB0B,EAAUvB,GAAGoB,MADH,KAAVA,EACqB,EAEAO,SAASP,EAAO,KAIjD,EAAKQ,SAAS,CAAEP,OAAQE,KA9BT,EAiCnBM,WAAa,WACT,EAAKlD,MAAMmD,aAAa,EAAKR,MAAMD,SAhCnC,EAAKU,aAAe,CAChBV,OAAQ,CACJ,CAAExB,KAAM,MAAOuB,MAAO,GACtB,CAAEvB,KAAM,MAAOuB,MAAO,GACtB,CAAEvB,KAAM,MAAOuB,MAAO,GACtB,CAAEvB,KAAM,MAAOuB,MAAO,GACtB,CAAEvB,KAAM,MAAOuB,MAAO,GACtB,CAAEvB,KAAM,MAAOuB,MAAO,KAG9B,EAAKE,MAAQ,EAAKS,aAZH,E,qDAsCT,IACEV,EAAWW,KAAKV,MAAhBD,OACR,OAAQ,0BAAMjD,UAAU,UACZ,2BAAOA,UAAU,QAAQ6D,QAAQ,OAAjC,YACA,2BAAO7D,UAAU,QACb8D,KAAK,SACLrC,KAAK,MACLsC,GAAG,MACHf,MAAOC,EAAO,GAAGD,MACjBgB,SAAUJ,KAAKb,aACfkB,QAASL,KAAKjB,cAClB,2BAAO3C,UAAU,QAAO6D,QAAQ,OAAhC,gBACA,2BAAO7D,UAAU,QACb8D,KAAK,SACLrC,KAAK,MACLsC,GAAG,MACHf,MAAOC,EAAO,GAAGD,MACjBgB,SAAUJ,KAAKb,aACfkB,QAASL,KAAKjB,cAClB,2BAAO3C,UAAU,QAAO6D,QAAQ,OAAhC,aACA,2BAAO7D,UAAU,QACb8D,KAAK,SACLrC,KAAK,MACLsC,GAAG,MACHf,MAAOC,EAAO,GAAGD,MACjBgB,SAAUJ,KAAKb,aACfkB,QAASL,KAAKjB,cAClB,2BAAO3C,UAAU,QAAQ6D,QAAQ,OAAjC,gBACA,2BAAO7D,UAAU,QACb8D,KAAK,SACLrC,KAAK,MACLsC,GAAG,MACHf,MAAOC,EAAO,GAAGD,MACjBgB,SAAUJ,KAAKb,aACfkB,QAASL,KAAKjB,cAClB,2BAAO3C,UAAU,QAAQ6D,QAAQ,OAAjC,YACA,2BAAO7D,UAAU,QACb8D,KAAK,SACLrC,KAAK,MACLsC,GAAG,MACHf,MAAOC,EAAO,GAAGD,MACjBgB,SAAUJ,KAAKb,aACfkB,QAASL,KAAKjB,cAClB,2BAAO3C,UAAU,QAAQ6D,QAAQ,OAAjC,UACA,2BAAO7D,UAAU,QACb8D,KAAK,SACLrC,KAAK,MACLsC,GAAG,MACHf,MAAOC,EAAO,GAAGD,MACjBgB,SAAUJ,KAAKb,aACfkB,QAASL,KAAKjB,cAClB,2BAAOmB,KAAK,SAASd,MAAM,SAASZ,QAASwB,KAAKH,kB,GA1FtCS,a,OCmHjBC,E,kDAjHX,WAAY5D,GAAQ,IAAD,8BACf,cAAMA,IAuCV6D,eAAiB,SAACC,EAAiBC,GAK/B,IALiD,IACzC7D,EAAkB,EAAKF,MAAvBE,cAEA8D,EAAwB,EAAKrB,MAA7BqB,oBACFC,EAAU/D,EAAcgE,oBACrB7C,EAAI,EAAGA,EAAI4C,EAAQF,GAAcI,KAAK7C,OAAQD,IAAK,CACxD,KAAI2C,EAAoBD,GAAczC,OAAS2C,EAAQF,GAAcK,QAY9D,CACH,EAAKpE,MAAMqE,mBAAmB,4EAC9B,MAbA,GAAIJ,EAAQF,GAAcI,KAAK9C,GAAGH,OAAS4C,GAAiB,qBACxD,IAAIQ,EAAiBL,EAAQF,GAAcI,KAAKI,QAAO,SAAU5C,GAAe,OAAOA,EAAYT,OAAS4C,KACtGU,EAAQ,sBAAO,EAAK7B,MAAMvC,eAAlB,CAAiCkE,EAAe,KAC1DG,EAAST,EAMb,OALAS,EAAOV,GAAP,sBAA2BU,EAAOV,IAAlC,CAAiDO,EAAe,KAChE,EAAKrB,UAAS,SAAAN,GAAK,MAAK,CACpBvC,cAAc,GAAD,mBAAMuC,EAAMvC,eAAZ,CAA2BkE,EAAe,KACvDN,oBAAqBS,KACrB,EAAKzE,MAAM0E,iBAAiBF,EAAUC,IAC1C,QATwD,GASxD,QAxDG,EAiEnBE,kBAAoB,SAACb,EAAiBC,GAGlC,IAHoD,IAC5C3D,EAAkB,EAAKuC,MAAvBvC,cACA4D,EAAwB,EAAKrB,MAA7BqB,oBACCY,EAAI,EAAGA,EAAIZ,EAAoB1C,OAAQsD,IAC5C,IAAK,IAAIC,EAAI,EAAGA,EAAIb,EAAoBY,GAAGtD,OAAQuD,IAC/C,GAAIb,EAAoBY,GAAGC,GAAG3D,OAAS4C,EAAiB,CACpD,IAAIgB,EAAmB1E,EAAcmE,QAAO,SAAU5C,GAAe,OAAOA,EAAYT,OAAS4C,KAC7FiB,EAAaf,EACjBe,EAAWhB,GAAgBC,EAAoBD,GAAcQ,QAAO,SAAU5C,GAAe,OAAOA,EAAYT,OAAS4C,KACzH,EAAKb,SAAS,CACV7C,cAAc,YAAK0E,GACnBd,oBAAqBe,GACtB,EAAK/E,MAAM0E,iBAAiBI,EAAkBC,IACjD,QA5EZ/D,QAAQC,IAAI,uBAAwBjB,GACpC,EAAK2C,MAAQ,CACTvC,cAAe,GACf4D,oBAAqB,IAGzB,EAAKU,iBAAmB,EAAKA,iBAAiBM,KAAtB,gBART,E,gEAaX7F,EADuBkE,KAAKrD,MAAxBE,gBAEJmD,KAAKqB,qB,yCAIO,IACRxE,EAAkBmD,KAAKrD,MAAvBE,cACA8D,EAAwBX,KAAKrD,MAA7BgE,oBACRhD,QAAQC,IAAI,qBAAsB+C,GAIlC,IAHA,IAAI5D,EAAgBF,EAAcE,cAC9BqE,EAAS,GACTQ,EAAqB/E,EAAcgE,oBAAoB5C,OAClDuD,EAAI,EAAGA,EAAII,EAAoBJ,IAAK,CACzC,GAAIb,EAAoB1C,OAAS,EAAG,CAChCmD,EAAST,EACThD,QAAQC,IAAI,UACZ,MAEAwD,EAAOI,GAAK,GAGpBxB,KAAKJ,SAAS,CACV7C,cAAeA,EACf4D,oBAAqBS,M,uDAqDzB,IAL8B,IAAD,OACrBvE,EAAkBmD,KAAKrD,MAAvBE,cACAE,EAAkBiD,KAAKV,MAAvBvC,cACA4D,EAAwBX,KAAKV,MAA7BqB,oBACJkB,EAAa,GAJY,aAMzB,IAAInB,EAAe1C,EACb8D,EAAsBjF,EAAcgE,oBAAoB7C,GAAG8C,KAAKrD,KAAI,SAACa,GACvE,IAAK,IAAID,EAAI,EAAGA,EAAItB,EAAckB,OAAQI,IACtC,IAAK,IAAI0D,EAAI,EAAGA,EAAIpB,EAAoBD,GAAczC,OAAQ8D,IAC1D,GAAIzD,EAAYT,OAAS8C,EAAoBD,GAAcqB,GAAGlE,KAC1D,OAAQ,4BAAQzB,UAAU,uBAAuBoC,QAAS,kBAAM,EAAK8C,kBAAkBhD,EAAYT,KAAM6C,IAAe1E,IAAKsC,EAAYT,MAAOS,EAAYT,MAIxK,OAAQ,4BAAQzB,UAAU,qBAAqBoC,QAAS,kBAAM,EAAKgC,eAAelC,EAAYT,KAAM6C,IAAe1E,IAAKsC,EAAYT,MAAOS,EAAYT,SAE3JgE,EAAWG,KAAK,yBAAK5F,UAAU,2BAA2BJ,IAAK,WAAa0E,GAAeoB,KAZtF9D,EAAI,EAAGA,EAAInB,EAAcgE,oBAAoB5C,OAAQD,IAAM,IAcpE,OAAQ6D,I,+BAIN,OAAQ,yBAAKzF,UAAU,OACZ4D,KAAKiC,sC,GA7GO3B,a,OC6UlB4B,E,kDA7UX,WAAYvF,GAAQ,IAAD,8BACf,cAAMA,IAiBVwF,WAAa,WAAM,IACPtF,EAAkB,EAAKF,MAAvBE,cACAuF,EAAc,EAAKzF,MAAnByF,UACJC,EAAiB,GACrB,GAA2B,WAAvBxF,EAAcgB,MAA4C,YAAvBhB,EAAcgB,MACjD,IAAK,IAAIyE,EAAI,EAAGA,EAAIF,EAAUnE,OAAQqE,IAClC,GAAIF,EAAUE,GAAGC,MAAM1E,OAAShB,EAAcgB,KAAM,CAChDwE,EAAe,GAAK,EACpB,IAAK,IAAIrE,EAAI,EAAGA,EAAI,EAAGA,IACyC,IAAxDoE,EAAUE,GAAGE,aAAa,qBAAuBxE,KACjDqE,EAAerE,GAAKoE,EAAUE,GAAGE,aAAa,qBAAuBxE,GACrEL,QAAQC,IAAI,cAAeyE,EAAerE,WAM1D,IAAK,IAAIK,EAAI,EAAGA,EAAI+D,EAAUnE,OAAQI,IAClC,GAAI+D,EAAU/D,GAAGkE,MAAM1E,OAAShB,EAAcgB,KAAM,CAChDwE,EAAe,GAAKD,EAAU/D,GAAGmE,aAAaC,eAC9C,IAAK,IAAIV,EAAI,EAAGA,EAAI,GAAIA,IACwC,IAAxDK,EAAU/D,GAAGmE,aAAa,qBAAuBT,KACjDM,EAAeN,GAAKK,EAAU/D,GAAGmE,aAAa,qBAAuBT,IAMzFpE,QAAQC,IAAI,mBAAoByE,GAChC,EAAKzC,SAAS,CACVuC,WAAYE,GACb,EAAK1F,MAAM+F,iBAAiBL,KAjDhB,EAoDnBM,aAAe,SAACpE,GAAW,IACfvB,EAAiB,EAAKL,MAAtBK,aACJ4F,EAAM,sBAAO5F,GAAP,CAAqBuB,IAC/B,EAAKqB,SAAS,CACV5C,aAAc4F,IAElB,EAAKjG,MAAMkG,UAAUD,IA1DN,EA6DnBE,oBAAsB,WAKlB,IALyB,IACjB9F,EAAiB,EAAKL,MAAtBK,aACJ+F,EAAW,EACXC,EAAiB,EACjBJ,EAAS,GACJ5E,EAAI,EAAGA,EAAIhB,EAAaiB,OAAQD,IACP,IAA1BhB,EAAagB,GAAGa,MAChBkE,IACiC,IAA1B/F,EAAagB,GAAGa,OACvBmE,IAKR,OAFAJ,EAAOZ,KAAKe,GACZH,EAAOZ,KAAKgB,GACLJ,GA3EQ,EA8EnBK,YAAc,SAAC1E,EAAO2E,GAAkB,IAMhCC,EAAQC,EALJvG,EAAkB,EAAKF,MAAvBE,cACAG,EAAiB,EAAKL,MAAtBK,aACAmF,EAAe,EAAK7C,MAApB6C,WACJY,EAAW,EACXC,EAAiB,EAErB,OAAOnG,EAAcgB,MACjB,IAAK,YACD,MACJ,IAAK,OACD,GAA4B,IAAxBb,EAAaiB,OAAc,CAC3B,EAAK0E,aAAapE,GAClB,MAHR,kBAKuB4D,EALvB,GAKKgB,EALL,KAKaC,EALb,WAMiC,EAAKN,sBANtC,mBAOI,GADCC,EANL,KAMeC,EANf,KAOQD,EAAWI,GAA0B,IAAhB5E,EAAMM,MAAa,CACxC,EAAK8D,aAAapE,GAClB,MAEJ,GAAIyE,EAAiBI,GAA0B,IAAhB7E,EAAMM,MAAa,CAC9C,EAAK8D,aAAapE,GAClB,MAEJ,MACJ,IAAK,SACD,GAA4B,IAAxBvB,EAAaiB,OAAc,CAC3B,EAAK0E,aAAapE,GAClB,MAHR,kBAKuB4D,EALvB,GAKKgB,EALL,KAKaC,EALb,WAMiC,EAAKN,sBANtC,mBAOI,GADCC,EANL,KAMeC,EANf,KAOQD,EAAWI,GAA0B,IAAhB5E,EAAMM,MAAa,CACxC,EAAK8D,aAAapE,GAClB,MAGAyE,EAAiBI,GAA0B,IAAhB7E,EAAMM,OACjC,EAAK8D,aAAapE,GAEtB,MACJ,IAAK,QACD,GAA4B,IAAxBvB,EAAaiB,OAAc,CAC3B,EAAK0E,aAAapE,GAClB,MAHR,kBAKuB4D,EALvB,GAKKgB,EALL,KAKaC,EALb,WAMiC,EAAKN,sBANtC,mBAOI,GADCC,EANL,KAMeC,EANf,KAOQD,EAAWI,GAA0B,IAAhB5E,EAAMM,MAAa,CACxC,EAAK8D,aAAapE,GAClB,MAEAyE,EAAiBI,GAA0B,IAAhB7E,EAAMM,OACjC,EAAK8D,aAAapE,GAEtB,MACJ,IAAK,UAEL,IAAK,OACD,MACJ,IAAK,UACD,GAA4B,IAAxBvB,EAAaiB,OAAc,CAC3B,EAAK0E,aAAapE,GAClB,MAHR,kBAKuB4D,EALvB,GAKKgB,EALL,KAKaC,EALb,WAMiC,EAAKN,sBANtC,mBAOI,GADCC,EANL,KAMeC,EANf,KAOQD,EAAWI,GAA0B,IAAhB5E,EAAMM,MAAa,CACxC,EAAK8D,aAAapE,GAClB,MAGAyE,EAAiBI,GAA0B,IAAhB7E,EAAMM,OACjC,EAAK8D,aAAapE,GAEtB,MACJ,IAAK,SACD,GAA4B,IAAxBvB,EAAaiB,OAAc,CAC3B,EAAK0E,aAAapE,GAClB,MAHR,kBAKuB4D,EALvB,GAKKgB,EALL,KAKaC,EALb,WAMiC,EAAKN,sBANtC,mBAOI,GADCC,EANL,KAMeC,EANf,KAOQD,EAAWI,GAA0B,IAAhB5E,EAAMM,MAAa,CACxC,EAAK8D,aAAapE,GAClB,MAEAyE,EAAiBI,GAA0B,IAAhB7E,EAAMM,OACjC,EAAK8D,aAAapE,GAEtB,MACJ,IAAK,QACD,MACJ,IAAK,WACD,GAA4B,IAAxBvB,EAAaiB,OAAc,CAC3B,EAAK0E,aAAapE,GAClB,MAHR,MAKiC,EAAKuE,sBALtC,mBAMI,GADCC,EALL,KAKeC,EALf,KAMQD,EAAW,GAAqB,IAAhBxE,EAAMM,MAAa,CACnC,EAAK8D,aAAapE,GAClB,MAGAyE,EAAiB,GAAqB,IAAhBzE,EAAMM,OAC5B,EAAK8D,aAAapE,GAEtB,MACJ,IAAK,UACD,GAA4B,IAAxBvB,EAAaiB,OAAc,CAC3B,EAAK0E,aAAapE,GAClB,MAHR,MAKiC,EAAKuE,sBALtC,mBAMI,GADCC,EALL,KAKeC,EALf,KAMQD,EAAW,GAAqB,IAAhBxE,EAAMM,MAAa,CACnC,EAAK8D,aAAapE,GAClB,MAGAyE,EAAiB,GAAqB,IAAhBzE,EAAMM,OAC5B,EAAK8D,aAAapE,GAEtB,MACJ,IAAK,SAED,GADAZ,QAAQC,IAAI,yBACgB,IAAxBZ,EAAaiB,OAAc,CAC3B,EAAK0E,aAAapE,GAClB,MAJR,MAMiC,EAAKuE,sBANtC,mBAOI,GADCC,EANL,KAMeC,EANf,KAOQD,EAAW,GAAqB,IAAhBxE,EAAMM,MAAa,CACnC,EAAK8D,aAAapE,GAClB,MAEJ,GAAIyE,EAAiB,GAAqB,IAAhBzE,EAAMM,MAAa,CACzC,EAAK8D,aAAapE,GAClB,MAEJ,IAAI8E,EAAU,kBAAoB9E,EAAMV,KAAO,uBAC/C,EAAKlB,MAAMqE,mBAAmBqC,KA1NvB,EAiOnBC,eAAiB,SAACzE,GAAW,IACjBhC,EAAkB,EAAKF,MAAvBE,cACA0G,EAAe,EAAK5G,MAApB4G,WACJX,EAAS,GAEb,OADAjF,QAAQC,IAAI,0BACJiB,GACJ,KAAK,EACD,IAAK,IAAIb,EAAI,EAAGA,EAAIuF,EAAWtF,OAAQD,IACnC,IAAK,IAAIK,EAAI,EAAGA,EAAIkF,EAAWvF,GAAGwF,QAAQvF,OAAQI,IAC1CxB,EAAcgB,OAAS0F,EAAWvF,GAAGwF,QAAQnF,GAAGR,MAAS0F,EAAWvF,GAAGa,OAASA,GAChF+D,EAAOZ,KAAKuB,EAAWvF,IAInC,EAAK4B,SAAS,CACVzC,YAAayF,IAEjBjF,QAAQC,IAAI,4BAA6BgF,GACzC,MACJ,QACIa,MAAM,wDArPC,EAyPnBC,SAAW,SAACnF,GACRZ,QAAQC,IAAI,cAAeW,EAAMV,MADf,IAEVX,EAAqB,EAAKP,MAA1BO,iBACR,EAAK+F,YAAY1E,EAAO,GACxBrB,EAAiBqB,IA7PF,EAgQnBoF,YAAc,SAACpF,GAMX,IANsB,IACdvB,EAAiB,EAAKL,MAAtBK,aACAE,EAAqB,EAAKP,MAA1BO,iBAEJ0F,EAAS,GAEJ5E,EAAI,EAAGA,EAAIhB,EAAaiB,OAAQD,IACjChB,EAAagB,GAAGH,OAASU,EAAMV,MAC/B+E,EAAOZ,KAAKhF,EAAagB,IAGjCL,QAAQC,IAAI,gCAAiCgF,GAC7C,EAAKhD,SAAS,CACV5C,aAAc4F,IAElB,EAAKjG,MAAMkG,UAAUD,GACrB1F,EAAiB,KAhRF,EAmRnB0G,cAAgB,WAQZ,IARmB,IACX/G,EAAkB,EAAKF,MAAvBE,cACAM,EAAgB,EAAKmC,MAArBnC,YACAgF,EAAe,EAAK7C,MAApB6C,WAEAnF,EAAiB,EAAKL,MAAtBK,aACJ6G,EAAe,GAND,aASd,IAAMC,EAAYvC,EACdwC,EAAa5G,EAAY+D,QAAO,SAAC3C,GACjC,OAAQA,EAAMM,QAAUiF,EAAYvF,EAAQ,QAGhDZ,QAAQC,IAAI,eAAgBmG,GAE5BF,EAAaC,GAAaC,EAAWtG,KAAI,SAACc,GACtC,IAAIyF,EAAa,oBAMb,QALqBrF,IAAjBJ,EAAM0F,aAC2BtF,IAA7BJ,EAAM0F,OAAOC,cACbF,GAAczF,EAAM0F,OAAOC,YAAYnG,OAGnB,IAAxBf,EAAaiB,OACb,OAAQ,4BAAQ7B,UAAW4H,EAAYxF,QAAS,kBAAM,EAAKkF,SAASnF,IAAQvC,IAAKuC,EAAMV,KAAOU,EAAMM,OAAQN,EAAMV,MAEtH,IAAK,IAAI2D,EAAI,EAAGA,EAAIxE,EAAaiB,OAAQuD,IAAK,CAE1C,GAAIxE,EADSwE,GACY3D,OAASU,EAAMV,KACpC,OAAQ,4BAAQzB,UAAW4H,EAAYxF,QAAS,kBAAM,EAAKmF,YAAYpF,IAAQvC,IAAKuC,EAAMV,KAAOU,EAAMM,OAAQN,EAAMV,MAGjI,OAAQ,4BAAQzB,UAAW4H,EAAYxF,QAAS,kBAAM,EAAKkF,SAASnF,IAAQvC,IAAKuC,EAAMV,KAAOU,EAAMM,OAAQN,EAAMV,UAxBjH0D,EAAI,EAAGA,EAAIY,EAAWlE,OAAQsD,IAAM,IA6B7C,IADA,IAAI4C,EAAqB,GAChB3C,EAAI,EAAGA,EAAIqC,EAAa5F,OAAQuD,IACrC,GAAU,IAANA,EAC2B,YAAvB3E,EAAcgB,MAA6C,WAAvBhB,EAAcgB,KAClDsG,EAAmB3C,GAAK,yBAAKpF,UAAU,MAAMJ,IAAI,YAAW,yBAAKI,UAAU,UAAS,8EAEpF+H,EAAmB3C,GAAK,yBAAKpF,UAAU,MAAMJ,IAAI,YAAW,yBAAKI,UAAU,UAAS,wCAAkByH,EAAarC,SAGpH,CAEH2C,EAAmB3C,GAAK,yBAAKpF,UAAU,MAAMJ,IAD5B,aAC8CwF,GAAG,yBAAKpF,UAAU,UAAU,2CAAiBoF,GAAQqC,EAAarC,KAGzI,OAAQ2C,GAnUR,EAAK7E,MAAQ,CACTnC,YAAa,GACbgF,WAAY,GACZnF,aAAc,IALH,E,gEAUfW,QAAQC,IAAI,uBAAwBoC,KAAKrD,OAEzCqD,KAAKmC,aACLnC,KAAKsD,eAAe,K,2CAGpB3F,QAAQC,IAAI,wBAAyBoC,KAAKrD,S,+BAyT1C,OAAQ,yBAAKP,UAAU,UAAU4D,KAAK4D,qB,GA1UpBtD,aCCL8D,E,kDACjB,WAAYzH,GAAQ,IAAD,8BACf,cAAMA,IACD2C,MAAQ,CACT1C,aAAc,IAElB,EAAKyH,QAAU,EAAKA,QAAQ1C,KAAb,gBACf,EAAK2C,WAAa,EAAKA,WAAW3C,KAAhB,gBAClBhE,QAAQC,IAAI,mBAAoBjB,GAPjB,E,gEAWXb,EAAWkE,KAAKrD,MAAMC,eACtBoD,KAAKJ,SAAS,CAAEhD,aAAcoD,KAAKrD,MAAMC,iB,iCAItCmB,GAGP,IAHe,IAAD,OACNwG,EAAcvE,KAAKrD,MAAnB4H,UACAC,EAAYxE,KAAKrD,MAAjB6H,QAFM,WAGLxG,GACL,GAAIuG,EAAUvG,GAAGD,QAAUA,EAAO,CAC9B,IAAMnB,EAAe2H,EAAUrD,QAAO,SAAUuD,GAAQ,OAAOA,EAAK5G,OAAS0G,EAAUvG,GAAGH,QAG1F,OAFA,EAAK+B,SAAS,CAAEhD,aAAcA,EAAa,KAC3C4H,EAAQ5H,EAAa,IACrB,UALCoB,EAAI,EAAGA,EAAIuG,EAAUtG,OAAQD,IAAK,gBAAlCA,GAKD,S,gCAKD,IAAD,OACE0G,EAAU1E,KAAKrD,MAAf+H,MACA9H,EAAiBoD,KAAKV,MAAtB1C,aAOR,OANkB8H,EAAMC,QAAQlH,KAAI,SAACgH,GACjC,OAAI3I,EAAWc,IAAiBA,EAAamB,QAAU0G,EAAK1G,MAChD,4BAAQ3B,UAAU,qDAAqDwI,gBAAc,OAAO5I,IAAKyI,EAAK1G,OAAQ0G,EAAK5G,MAEvH,4BAAQW,QAAS,kBAAM,EAAK8F,WAAWG,EAAK1G,QAAQ3B,UAAU,yBAAyBJ,IAAKyI,EAAK1G,OAAQ0G,EAAK5G,W,+BAM1H,OAAQ,yBAAKzB,UAAU,UACL4D,KAAKqE,e,GA5CY/D,aCAtBuE,E,kDACjB,WAAYlI,GAAQ,IAAD,8BACf,cAAMA,IACD2C,MAAQ,CACTzC,cAAe,IAEnB,EAAKwH,QAAU,EAAKA,QAAQ1C,KAAb,gBACf,EAAKmD,YAAc,EAAKA,YAAYnD,KAAjB,gBANJ,E,gEAUX7F,EAAWkE,KAAKrD,MAAME,gBACtBmD,KAAKJ,SAAS,CAAE/C,cAAemD,KAAKrD,MAAME,kB,kCAItCkB,GAGR,IAHgB,IAAD,OACPgH,EAAgB/E,KAAKrD,MAArBoI,YACAC,EAAahF,KAAKrD,MAAlBqI,SAFO,WAGNhH,GACL,GAAI+G,EAAY/G,GAAGD,QAAUA,EAAO,CAChC,IAAMlB,EAAgBkI,EAAY7D,QAAO,SAAU+D,GAAU,OAAOA,EAAOpH,OAASkH,EAAY/G,GAAGH,QAGnG,OAFA,EAAK+B,SAAS,CAAE/C,cAAeA,EAAc,KAC7CmI,EAASnI,EAAc,IACvB,UALCmB,EAAI,EAAGA,EAAI+G,EAAY9G,OAAQD,IAAK,gBAApCA,GAKD,S,gCAKD,IAAD,OACEwF,EAAYxD,KAAKrD,MAAjB6G,QACA3G,EAAkBmD,KAAKV,MAAvBzC,cAUR,OARmB2G,EAAQmB,QAAQlH,KAAI,SAACyH,GACpC,OAAIpJ,EAAWe,IAAkBA,EAAckB,QAAUmH,EAAenH,MAE5D,4BAAQ3B,UAAU,wCAAwCJ,IAAKkJ,EAAenH,OAAQmH,EAAerH,MAEzG,4BAAQW,QAAS,kBAAM,EAAKsG,YAAYI,EAAenH,QAAQ3B,UAAU,yBAAyBJ,IAAKkJ,EAAenH,OAAQmH,EAAerH,W,+BAOzJ,OAAQ,yBAAKzB,UAAU,OACX,yBAAKA,UAAU,gCACV4D,KAAKqE,gB,GA/Cc/D,aC4D7B6E,EAvDG,SAACxI,GACfgB,QAAQC,IAAI,oBAAqBjB,GAEjC,IAAMJ,EAAgBI,EAAMJ,cACtBM,EAAgBF,EAAME,cACtB4B,EAAa9B,EAAM8B,WACnB2G,EAAWzI,EAAMyI,SAEvB,OAAQ3G,GACJ,IAAK,QACD,OAAQ,kBAAC,EAAU9B,GACvB,IAAK,UACD,OAAQ,yBAAKP,UAAU,gCAA+B,kBAAC,EAAYO,IACvE,IAAK,gBACD,OAAIb,EAAWe,GACH,yBAAKT,UAAU,gCACX,kBAAC,EAAuBO,IAGhC,yBAAKP,UAAU,gCAAf,4EAEZ,IAAK,SACD,OAAIN,EAAWe,SAAiD8B,IAA/B9B,EAAc2F,aACnC,yBAAKpG,UAAU,gCACX,kBAAC,EAAgBO,IAGzB,yBAAKP,UAAU,gCAAgCS,EAAcgB,KAA7D,2BAEZ,IAAK,iBACD,IAAIwB,EAAS9C,EAAcoI,QAAQlH,KAAI,SAAC4H,EAActH,GAClD,OAAQ,4BAAQS,QAAS,kBAAM4G,EAASC,EAAatH,QAAQ3B,UAAU,+BAA+BJ,IAAK+B,GAAQsH,EAAaxH,SAEpI,OACI,yBAAKzB,UAAU,gCACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,UACViD,GAEL,kBAAC,EAAD,CAAmBS,aAAcnD,EAAMmD,iBAKvD,QACI,OAAQ,yBAAK1D,UAAU,gCAAf,4BCfLkJ,EAnCI,SAAC3I,GAEhB,IAAM8B,EAAa9B,EAAM8B,WACnB8G,EAAuB5I,EAAM4I,qBAC7BC,EAAW7I,EAAM6I,SACjB3I,EAAgBF,EAAME,cAExB4I,EAAaF,EAAqB9H,KAAI,SAACiI,EAAU3H,GACjD,GAAIjC,EAAWe,GACX,OAAI4B,IAAeiH,EACP,4BAAQtJ,UAAU,4CAA4CuJ,SAAS,KAAKf,gBAAc,OAAO5I,IAAK+B,GAAQ2H,GAE9G,4BAAQlH,QAAS,kBAAMgH,EAASE,IAAWtJ,UAAU,oBAAoBJ,IAAK+B,GAAQ2H,GAGlG,GAAIjH,IAAeiH,EACf,OAAQ,4BAAQtJ,UAAU,4CAA4CuJ,SAAS,KAAKf,gBAAc,OAAO5I,IAAK+B,GAAQ2H,GAEtH,GAAiB,YAAbA,GAA0C,kBAAfjH,GAAiD,WAAfA,EAQ7D,OAAQ,4BAAQD,QAAS,kBAAMgH,EAASE,IAAWtJ,UAAU,oBAAoBJ,IAAK+B,GAAQ2H,GAP9F,OAAQjH,GACJ,IAAK,gBACD,OAAQ,4BAAQD,QAAS,kBAAMgH,EAASE,IAAWtJ,UAAU,0BAA0BJ,IAAK+B,GAAQ2H,GACxG,QACI,OAAQ,4BAAQlH,QAAS,kBAAMgH,EAASE,IAAWtJ,UAAU,8BAA8BJ,IAAK+B,GAAQ2H,OAQhI,OAAQ,yBAAKtJ,UAAU,iCACVqJ,ICnBFG,EAdG,SAACjJ,GACfgB,QAAQC,IAAI,kBAAmBjB,GAE/B,IAAIkJ,EAAW,yBAAKzJ,UAAU,MAAM+D,GAAG,UAQvC,OAPIxD,EAAMmJ,aAAa7H,OAAS,IAC5B4H,EAAW,yBAAKzJ,UAAU,MAAM+D,GAAG,SAC/B,yBAAK/D,UAAU,mBACVO,EAAMmJ,gBAIXD,GC8NGE,E,kDAhOX,WAAYpJ,GAAQ,IAAD,8BACf,cAAMA,IA0CVqJ,mBAAqB,SAACC,GAIlB,IAJyC,IACjCC,EAAUD,EAAVC,MACAvB,EAAYsB,EAAZtB,QACJpI,EAAgB,GACX8B,EAAI,EAAGA,EAAI6H,EAAO7H,IAAK,CAE5B9B,EADcoI,EAAQtG,GAAGN,OACA,EAE7B,EAAK6B,SAAS,CAAEpC,sBAAuBjB,KAnDxB,EAsDnByE,mBAAqB,SAACqC,GAClB,EAAKzD,SAAS,CAAEkG,aAAczC,GAAW,EAAK8C,gBAvD/B,EA0DnBA,YAAc,WACV,IAAMC,EAAYC,SAASC,eAAe,SAK1CC,YAAW,WACP,IAAIC,EAAOC,aAAY,WACdL,EAAUM,MAAMC,UAClBP,EAAUM,MAAMC,QAAU,GAEzBP,EAAUM,MAAMC,QAAU,EAC1BP,EAAUM,MAAMC,SAAW,IAE3BC,cAAcJ,KAEnB,MACJ,MACH,EAAK5G,SAAS,CAAEkG,aAAc,KAC9BM,EAAUM,MAAMC,QAAU,GA7EX,EAgFnBzJ,iBAAmB,SAACqB,GAChB,EAAKqB,SAAS,CAAE3C,cAAesB,KAjFhB,EAoFnBsE,UAAY,SAACD,GACT,EAAKhD,SAAS,CACV5C,aAAc4F,KAtFH,EA0FnBF,iBAAmB,SAACmE,GAChB,EAAKjH,SAAS,CAAEuC,WAAY0E,KA3Fb,EA8FnBrB,SAAW,SAACE,GACR,EAAK9F,SAAS,CAAEnB,WAAYiH,KA/Fb,EAkGnBN,SAAW,SAAC1H,GAIR,IAJqB,IACbnB,EAAkB,EAAKI,MAAvBJ,cAEJ8C,EAD8B,EAAKC,MAA/B9B,sBAECQ,EAAI,EAAGA,EAAIzB,EAAc2J,MAAOlI,IACrC,GAAIzB,EAAcoI,QAAQ3G,GAAGD,QAAUL,EAAS,CAC5C2B,EAAO3B,GAAW,EAAKoJ,eAAe,GACtC,EAAKlH,SAAS,CAACpC,sBAAuB6B,IACtC,QA1GO,EAgHnByH,eAAiB,SAACC,GAMd,IALA,IAEIC,EAAe,EACfC,EAAgB,EAChBC,EAAqB,GAChBlJ,EAAI,EAAGA,EALK,EAKeA,IAChCgJ,EAAeG,KAAKC,MAAOD,KAAKE,SAAWN,EAAU,GACrDG,EAAmBlF,KAAKgF,GAE5BE,EAAmBI,OACnBJ,EAAmBK,OAAO,EAAGC,GAC7B,IAAK,IAAInJ,EAAI,EAAGA,EAAI6I,EAAmBjJ,OAAQI,IAC3C4I,GAAiBC,EAAmB7I,GAExC,OAAO4I,GA/HQ,EA0InBQ,sBAAwB,SAAC1K,GACrB,EAAK6C,SAAS,CAAE7C,cAAeA,KA3IhB,EA8InBsE,iBAAmB,SAACtE,EAAe6D,GAC/BjD,QAAQC,IAAI,oBAAqBb,GACjC,EAAK6C,SAAS,CACV7C,cAAeA,EACf4D,oBAAqBC,KAlJV,EAsJnB8G,oBAAsB,SAAC3K,EAAe6D,GAClC,EAAKhB,SAAS,CACV7C,cAAeA,EACf4K,qBAAsB/G,KAzJX,EA6KnBd,aAAe,SAACzC,GAIZ,IAJ0B,IAEtBgC,EAD8B,EAAKC,MAA/B9B,sBAEJoK,EAAW,GACN5J,EAAI,EAAGA,EAAIX,EAAUY,OAAQD,IAC9BX,EAAUW,GAAGoB,MAAQ,GAAK/B,EAAUW,GAAGoB,MAAQ,GAC/CwI,EAAS5F,KAAK3E,EAAUW,GAAGH,OAE3BwB,EAAOhC,EAAUW,GAAGH,MAAQ8B,SAAStC,EAAUW,GAAGoB,MAAO,IACzD,EAAKQ,SAAS,CAAEpC,sBAAuB6B,KAG/C,GAAIuI,EAAS3J,OAAS,EAAG,CAErB,IADA,IAAI4J,EAAc,0DACT9F,EAAI,EAAGA,EAAI6F,EAAS3J,OAAQ8D,IAC7BA,EAAI6F,EAAS3J,OAAS,EACtB4J,GAAeD,EAAS7F,GAAK,KAE7B8F,GAAeD,EAAS7F,GAGhC8F,GAAe,IACf,EAAK7G,mBAAmB6G,KAjM5B,EAAKvI,MAAQ,CACT9B,sBAAuB,GACvB+H,qBAAsB,CAAC,QAAS,UAAW,iBAAkB,gBAAiB,UAC9E9G,WAAY,QACZ5B,cAAe,GACfD,aAAc,GACdG,cAAe,GACf4K,qBAAsB,GACtBhH,oBAAqB,GACrB3D,aAAc,GACdmF,WAAY,GACZlF,cAAe,GACf6I,aAAc,GACdpD,iBAAkB,EAAKA,iBACvB1B,mBAAoB,EAAKA,mBACzB9D,iBAAkB,EAAKA,iBACvBmE,iBAAkB,EAAKA,iBACvBoG,sBAAuB,EAAKA,sBAC5BC,oBAAqB,EAAKA,oBAC1B7E,UAAW,EAAKA,WAOpB,EAAK2B,QAAU,EAAKA,QAAQ7C,KAAb,gBACf,EAAKqD,SAAW,EAAKA,SAASrD,KAAd,gBA7BD,E,gEAgCE,IACTpF,EAAkByD,KAAKrD,MAAvBJ,cACRyD,KAAKgG,mBAAmBzJ,GACxBoB,QAAQC,IAAI,6B,2CAIZD,QAAQC,IAAI,6B,8BA2FRkK,GACJ9H,KAAKJ,SAAS,CAAEhD,aAAckL,M,+BAGzBC,GACL/H,KAAKJ,SAAS,CAAE/C,cAAekL,EAAa/K,aAAc,GAAIC,cAAe,GAAIF,cAAegL,EAAYhL,cAAe4D,oBAAqB,O,+BAmEhJ,OAAQ,yBAAKR,GAAG,UAAU/D,UAAU,4BAChC,kBAAC,EAAD,CAAW0J,aAAc9F,KAAKV,MAAMwG,eACpC,yBAAK1J,UAAU,OACX,kBAAC,EAAD,iBAAU4D,KAAKV,MAAWU,KAAKrD,SAEnC,yBAAKP,UAAU,OACX,kBAAC,EAAD,iBAAe4D,KAAKV,MAAWU,KAAKrD,MAApC,CAA2C6H,QAASxE,KAAKwE,QAASQ,SAAUhF,KAAKgF,SAAUlF,aAAcE,KAAKF,aAAcsF,SAAUpF,KAAKoF,aAE/I,yBAAKhJ,UAAU,OACX,kBAAC,EAAD,iBAAgB4D,KAAKV,MAAWU,KAAKrD,MAArC,CAA4C6I,SAAUxF,KAAKwF,kB,GApN7ClF,aCPT0H,E,kDACjB,WAAYrL,GAAQ,IAAD,8BACf,cAAMA,IAkGVsL,cAAgB,WACZ,IAAMC,EAAO,EAAK5I,MAClB,IAAK,IAAItD,KAAOkM,EACJ5K,OAAO6K,eAAeD,EAAKlM,IAAMoM,aApG7C,EAAKrI,aAAe,CAEhB2E,MAAO,GACPH,UAAW,GAEXf,QAAS,GACTuB,YAAa,GAEbxI,cAAe,GACfO,kBAAmB,GAEnB8F,OAAQ,GACRW,WAAY,GAEZ8E,SAAU,GACVC,aAAc,GAEdlG,UAAW,IAEf,EAAK9C,MAAQ,EAAKS,aArBH,E,gEAwBE,IAAD,OACVwI,EAAM,+BACZC,MAAMD,EAAM,SACPE,MAAK,SAAAC,GAAM,OAAIA,EAAOC,UACtBF,MAAK,SAAAC,GAAY,EAAK9I,SAAS,CAAE8E,MAAOgE,GAAU,EAAKE,QAAQF,EAAQ,aACvEG,OAAM,SAAAC,GAAOnL,QAAQC,IAAIkL,EAAI,OAASP,MAC3CC,MAAMD,EAAM,WACPE,MAAK,SAAAC,GAAM,OAAIA,EAAOC,UACtBF,MAAK,SAAAC,GAAY,EAAK9I,SAAS,CAAE4D,QAASkF,GAAU,EAAKE,QAAQF,EAAQ,eACzEG,OAAM,SAAAC,GAAOnL,QAAQC,IAAI,sBAAuBkL,MACrDN,MAAMD,EAAM,kBACPE,MAAK,SAAAC,GAAM,OAAIA,EAAOC,UACtBF,MAAK,SAAAC,GAAY,EAAK9I,SAAS,CAAErD,cAAemM,GAAU,EAAKE,QAAQF,EAAQ,sBAC/EG,OAAM,SAAAC,GAAOnL,QAAQC,IAAI,sBAAuBkL,MACrDN,MAAMD,EAAM,UACPE,MAAK,SAAAC,GAAM,OAAIA,EAAOC,UACtBF,MAAK,SAAAC,GAAY,EAAK9I,SAAS,CAAEgD,OAAQ8F,GAAU,EAAKE,QAAQF,EAAQ,cACxEG,OAAM,SAAAC,GAAOnL,QAAQC,IAAI,sBAAuBkL,MAErDN,MAAMD,EAAM,YACPE,MAAK,SAAAC,GAAM,OAAIA,EAAOC,UACtBF,MAAK,SAAAC,GAAY,EAAK9I,SAAS,CAAEyI,SAAUK,GAAU,EAAKE,QAAQF,EAAQ,kB,iFAatER,EAAMhF,GAGf,IAFA,IAAI6F,EAAS,GAEJ/K,EAAI,EAAGA,EAAIkK,EAAKvD,QAAQ1G,OAAQD,IACrCwK,MAAMD,uCAAwBL,EAAKvD,QAAQ3G,GAAGD,MAAQ,WAAamF,GAC9DuF,MAAK,SAAAC,GAAM,OAAIA,EAAOC,UACtBF,MAAK,SAAAC,GAAM,OAAIK,EAAO/G,KAAK0G,MAEpC1I,KAAKJ,SAAS,CACVwC,UAAW2G,M,8BAIXb,EAAMxC,GAGV,IAFA,IAAIsD,EAAO,GAEFhL,EAAI,EAAGA,EAAIkK,EAAKvD,QAAQ1G,OAAQD,IACrCwK,MAFQ,0BAEIN,EAAKvD,QAAQ3G,GAAGuK,KACvBE,MAAK,SAAAC,GAAM,OAAIA,EAAOC,UACtBF,MAAK,SAAAC,GAAM,OAAIM,EAAKhH,KAAK0G,MAElC,OAAOhD,GACH,IAAK,QACD1F,KAAKJ,SAAS,CAAE2E,UAAWyE,IAC/B,MACA,IAAK,UACDhJ,KAAKJ,SAAS,CAAEmF,YAAaiE,GAAShJ,KAAKiJ,aAAaf,EAAM,IAC9D,MACJ,IAAK,iBACDlI,KAAKJ,SAAS,CAAE9C,kBAAmBkM,IACnC,MACJ,IAAK,SACDhJ,KAAKJ,SAAS,CAAE2D,WAAYyF,IAC5B,MACJ,IAAK,WACDhJ,KAAKJ,SAAS,CAAE0I,aAAcU,O,+BA4BhC,IACEtE,EAAU1E,KAAKV,MAAfoF,MACAlB,EAAYxD,KAAKV,MAAjBkE,QACAjH,EAAkByD,KAAKV,MAAvB/C,cACAqG,EAAW5C,KAAKV,MAAhBsD,OACAW,EAAevD,KAAKV,MAApBiE,WACA8E,EAAarI,KAAKV,MAAlB+I,SACAjG,EAAcpC,KAAKV,MAAnB8C,UAER,YAAsBzD,IAAlB+F,EAAMC,cAA6ChG,IAApB6E,EAAQmB,cAAmDhG,IAA1BpC,EAAcoI,cAA4ChG,IAAnBiE,EAAO+B,SAAyBpB,EAAWtF,SAAW2E,EAAOsD,OAA8B,KAArB9D,EAAUnE,aAAsCU,IAArB0J,EAAS1D,QACzM,yBAAKvI,UAAU,mBACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,sBACX,gDAKZ,kBAAC,EAAoB4D,KAAKV,W,GA5IbgB,a,MCGjC4I,IAASC,OAAO,kBAAC,EAAD,MAAS9C,SAASC,eAAe,W","file":"static/js/main.1654b84a.chunk.js","sourcesContent":["export default function isSelected(obj) {\r\n    for (var key in obj) {\r\n        obj.hasOwnProperty(key)\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\n","import React from 'react'\r\nimport isSelected from './helper/helper-functions'\r\n//import CharacterImages from'./CharacterImages'\r\n//import ClassProficiencies from './ClassProficiencies'\r\n\r\nfunction InfoDisplay(raceName, className, hit_die, ability_bonuses, abilityScores, saving_throws, characterProficiencies){ //choose 1, either underscores or camelCase. You can't have both!!! Or can you...no\r\n    return (<div className=\"col-12 info\">\r\n        <div className='row'>\r\n            <div className='col-12 characterTitle'>\r\n                <h3>{raceName} {className}</h3>\r\n            </div>\r\n            <div className='col-6'>            \r\n                <strong>Ability bonuses</strong><br />\r\n                <ul>{ability_bonuses}</ul>\r\n                <strong>Ability Scores: </strong>\r\n                <div className='row'>\r\n                    {abilityScores}\r\n                </div>  \r\n            </div>\r\n            <div className='col-6'>\r\n                <strong>Hit die: </strong>{hit_die}<br />\r\n                <strong>Saving throws</strong><br />\r\n                <ul>{saving_throws}</ul>\r\n                <strong>Proficiencies</strong>\r\n                <ul>\r\n                    {characterProficiencies}\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    </div>);\r\n}\r\n\r\n//export class Info extends Component {\r\n//    constructor(props) {\r\n//        super(props);\r\n//        this.state = {\r\n//            spellsChosen = [],\r\n//            proficienciesChosen = \r\n\r\n//        }\r\n//    }\r\n//}\r\n\r\n\r\n\r\n//Work on refactoring this mess\r\nconst Info = (props) => {\r\n  //  console.log(\"Info props\", props)\r\n    const { raceSelected } = props\r\n    const { classSelected } = props\r\n    const { abilityScoresInfo } = props\r\n    const { proficiencies } = props\r\n    const { spellsChosen } = props\r\n    const { selectedSpell } = props\r\n    const { setSelectedSpell } = props \r\n\r\n    let raceName = \"\";\r\n    let className = \"\"; \r\n    let hit_die = \"\";\r\n    let ability_bonuses = [];\r\n    let saving_throws = [];\r\n    let characterProficiencies = [];\r\n    let classSpells = [];\r\n  //  let classFeatures = [];\r\n\r\n    let bonuses = []\r\n\r\n    let abilities = Object.keys(props.abilityScoresSelected);\r\n    let abilityScores = abilities.map((ability) => {\r\n        console.log(\"HERE\")\r\n        return (<div className='col text-center abilityScores' key={ability}>\r\n            <h6>{ability}</h6>\r\n            <p>{props.abilityScoresSelected[ability]}</p>\r\n        </div>);\r\n    });\r\n\r\n    \r\n    if (isSelected(raceSelected)) { //setting up info for when a race has been selected\r\n        raceName = raceSelected.name\r\n        ability_bonuses = raceSelected.ability_bonuses.map((bonus, index) => {\r\n            for (var i = 0; i < abilityScoresInfo.length; i++) {\r\n                if (abilityScoresInfo[i].name === bonus.name) {\r\n                    return (<li key={index}>{abilityScoresInfo[i].full_name}: +{bonus.bonus}</li>);\r\n                }\r\n            }\r\n            return (<li key={index}>Ability: +BONUS</li>);\r\n        });\r\n        bonuses = raceSelected.ability_bonuses.map((bonus) => {\r\n            return bonus\r\n        });\r\n        abilityScores = abilities.map((ability) => {\r\n            for (var i = 0; i < bonuses.length; i++) {\r\n                if (bonuses[i].name.toLowerCase() === ability) {\r\n                    return (<div className='col text-center abilityScores' key={ability}>\r\n                        <h6>{ability}</h6>\r\n                        <p>{props.abilityScoresSelected[ability]}+{bonuses[i].bonus}</p>\r\n                    </div>);\r\n                }\r\n            }\r\n            return (<div className='col text-center abilityScores' key={ability}>\r\n                <h6>{ability}</h6>\r\n                <p>{props.abilityScoresSelected[ability]}</p>\r\n            </div>);\r\n        });\r\n    }\r\n\r\n    if (isSelected(classSelected)) { //setting up info for when a class has been selected\r\n        className = classSelected.name\r\n        hit_die = props.classSelected.hit_die\r\n        saving_throws = props.classSelected.saving_throws.map((saving_throw, index) => {\r\n            for (var j = 0; j < abilityScoresInfo.length; j++) {\r\n                if (abilityScoresInfo[j].name === saving_throw.name) {\r\n                    return (<li key={saving_throw.name.toLowerCase()}>{abilityScoresInfo[j].full_name}</li>);\r\n                }\r\n            }\r\n            return (<li key={index}>Ability: +BONUS</li>);\r\n        });\r\n        characterProficiencies = proficiencies.map((proficiency) => {\r\n            return (<li key={proficiency.name}>{proficiency.name}</li>);\r\n        });\r\n\r\n\r\n\r\n\r\n        if (spellsChosen.length > 0) {\r\n            classSpells = spellsChosen.map((spell) => {\r\n                if (spell === selectedSpell) {\r\n                    return (<li key={spell.name}>{spell.name}</li>);\r\n                } else {\r\n                    return (<li onClick={() => setSelectedSpell(spell)} key={spell.name}>{spell.name}</li>);\r\n                }\r\n            });            \r\n        } \r\n    }\r\n    \r\n    switch (props.navigation) {\r\n        //case \"Races\":        \r\n        //    if (props.isRaceSelected(raceSelected) || props.isClassSelected(classSelected)) {\r\n        //        return InfoDisplay(raceName, className, hit_die, ability_bonuses, saving_throws);\r\n        //    } else {\r\n        //        return (<div className=\"col-12 info\">\r\n        //                    <p className='text-center'> ...Choose your race</p>\r\n        //                </div>);\r\n        //    }\r\n        //case 'Classes':\r\n        //    if (props.isClassSelected(classSelected) || props.isRaceSelected(raceSelected)) {\r\n        //        return InfoDisplay(raceName, className, hit_die, ability_bonuses, saving_throws);\r\n        //    } else {\r\n        //        return (<div className=\"col-12 info\">\r\n        //                    <h3>{className}</h3>\r\n        //                    <p className='text-center'> ...Choose your class</p>\r\n        //                </div>);\r\n        //    }\r\n        case 'Ability-Scores':\r\n            return InfoDisplay(raceName, className, hit_die, ability_bonuses, abilityScores, saving_throws, characterProficiencies);\r\n        case 'Proficiencies':\r\n            return InfoDisplay(raceName, className, hit_die, ability_bonuses, abilityScores, saving_throws, characterProficiencies);\r\n        case 'Spells':\r\n            if (isSelected(classSelected)) {\r\n                let spellDescription;\r\n                if (selectedSpell.name === undefined) {\r\n               //     console.log(\"check check check\")\r\n                } else {\r\n                    spellDescription = <p>{selectedSpell.desc}</p>\r\n                }\r\n                return (<div className='col-12 info'>\r\n                    <div className='row'>\r\n                        <div className='col-12'>\r\n                            <h3>{props.raceSelected.name} {props.classSelected.name}</h3>\r\n                        </div>\r\n                        <div className='col-3'>\r\n                            <p>Spells</p>\r\n                            <ul>{classSpells}</ul>\r\n                        </div>\r\n                        <div className='col-9'>\r\n                            <h4>{selectedSpell.name} {selectedSpell.level}</h4>\r\n                            {spellDescription}\r\n                        </div>\r\n                    </div>\r\n                </div>);\r\n            } else {\r\n                return (<div className='col-12 info'>\r\n                            <p className='text-center'>..Choose your class to select spells </p>\r\n                        </div>);\r\n            }\r\n        default:\r\n            return InfoDisplay(raceName, className, hit_die, ability_bonuses, abilityScores, saving_throws, characterProficiencies); \r\n        }\r\n    }\r\n    \r\nexport default Info","import React, { Component} from 'react'\r\n\r\nclass AbilityScoresForm extends Component {\r\n    constructor(props) {\r\n        super(props);      \r\n        this.initialState = {\r\n            scores: [\r\n                { name: 'cha', value: 0, },\r\n                { name: 'con', value: 0, },\r\n                { name: 'dex', value: 0, },\r\n                { name: 'int', value: 0, },\r\n                { name: 'str', value: 0, },\r\n                { name: 'wis', value: 0, },\r\n            ],\r\n        }\r\n        this.state = this.initialState\r\n    }\r\n\r\n    handleFocus = (event) => event.target.select();\r\n        \r\n    handleChange = (event) => {\r\n        const { name, value } = event.target\r\n        const { scores } = this.state\r\n        const newScores = JSON.parse(JSON.stringify(scores))\r\n        for (var i = 0; i < newScores.length; i++) {\r\n            if (newScores[i].name === name) {\r\n                if (value === '') {\r\n                    newScores[i].value = 0                    \r\n                } else {\r\n                    newScores[i].value = parseInt(value, 10);\r\n                }\r\n            }\r\n        }        \r\n        this.setState({ scores: newScores })\r\n    } \r\n\r\n    submitForm = () => {\r\n        this.props.handleSubmit(this.state.scores)\r\n     //   this.setState(this.initialState)\r\n    }\r\n\r\n    render() {\r\n        const { scores } = this.state;\r\n        return (<form className='col-12'>\r\n                    <label className='col-3' htmlFor=\"cha\">Charisma</label>\r\n                    <input className='col-1'\r\n                        type='number'\r\n                        name='cha'\r\n                        id='cha'\r\n                        value={scores[0].value}\r\n                        onChange={this.handleChange}\r\n                        onFocus={this.handleFocus} />\r\n                    <label className='col-3'htmlFor=\"con\">Constitution</label>\r\n                    <input className='col-1'\r\n                        type='number'\r\n                        name='con'\r\n                        id='con'\r\n                        value={scores[1].value}\r\n                        onChange={this.handleChange}\r\n                        onFocus={this.handleFocus} />\r\n                    <label className='col-3'htmlFor=\"dex\">Dexterity</label>\r\n                    <input className='col-1'\r\n                        type='number'\r\n                        name='dex'\r\n                        id='dex'\r\n                        value={scores[2].value}\r\n                        onChange={this.handleChange}\r\n                        onFocus={this.handleFocus} />\r\n                    <label className='col-3' htmlFor=\"int\">Intelligence</label>\r\n                    <input className='col-1'\r\n                        type='number'\r\n                        name='int'\r\n                        id='int'\r\n                        value={scores[3].value}\r\n                        onChange={this.handleChange}\r\n                        onFocus={this.handleFocus} />\r\n                    <label className='col-3' htmlFor='str'>Strength</label>\r\n                    <input className='col-1'\r\n                        type='number'\r\n                        name='str'\r\n                        id='str'\r\n                        value={scores[4].value}\r\n                        onChange={this.handleChange}\r\n                        onFocus={this.handleFocus} />\r\n                    <label className='col-3' htmlFor=\"wis\">Wisdom</label>\r\n                    <input className='col-1'\r\n                        type='number'\r\n                        name='wis'\r\n                        id='wis'\r\n                        value={scores[5].value}\r\n                        onChange={this.handleChange}\r\n                        onFocus={this.handleFocus} />\r\n                    <input type=\"button\" value=\"Submit\" onClick={this.submitForm} />\r\n            </form>);       \r\n    }\r\n}\r\n\r\nexport default AbilityScoresForm;","import React, { Component } from 'react'\r\nimport isSelected from './helper/helper-functions'\r\n\r\nclass ClassProficiencies extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        console.log(\"ClassProficiencies: \", props);\r\n        this.state = {\r\n            proficiencies: [],\r\n            proficienciesChosen: [],\r\n            \r\n        };\r\n        this.setProficiencies = this.setProficiencies.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { classSelected }  = this.props;\r\n        if (isSelected(classSelected)) {\r\n            this.setProficiencies();\r\n        }        \r\n    }   \r\n    \r\n    setProficiencies() {\r\n        const { classSelected } = this.props;\r\n        const { proficienciesChosen } = this.props;\r\n        console.log(\"SET PROFICIENCIES \", proficienciesChosen);\r\n        let proficiencies = classSelected.proficiencies;\r\n        let chosen = []; \r\n        let numberOfCategories = classSelected.proficiency_choices.length;\r\n        for (var b = 0; b < numberOfCategories; b++) {\r\n            if (proficienciesChosen.length > 0) {\r\n                chosen = proficienciesChosen;\r\n                console.log(\"DID IT\");\r\n                break;\r\n            } else {\r\n                chosen[b] = [];\r\n            }\r\n        }\r\n        this.setState({\r\n            proficiencies: proficiencies,\r\n            proficienciesChosen: chosen,\r\n        });\r\n    }\r\n   \r\n    addProficiency = (proficiencyName, choicesIndex) => {\r\n        const { classSelected } = this.props;\r\n       // const { proficiencies } = this.state; // testing another way to use state in setState below. \r\n        const { proficienciesChosen } = this.state;\r\n        const choices = classSelected.proficiency_choices;     \r\n        for (var i = 0; i < choices[choicesIndex].from.length; i++) {\r\n            if (proficienciesChosen[choicesIndex].length < choices[choicesIndex].choose) {\r\n                if (choices[choicesIndex].from[i].name === proficiencyName) {\r\n                    let newProficiency = choices[choicesIndex].from.filter(function (proficiency) { return proficiency.name === proficiencyName });\r\n                    const newProfs = [...this.state.proficiencies, newProficiency[0]];\r\n                    let chosen = proficienciesChosen;\r\n                    chosen[choicesIndex] = [...chosen[choicesIndex], newProficiency[0]];\r\n                    this.setState(state => ({\r\n                        proficiencies: [...state.proficiencies, newProficiency[0]],\r\n                        proficienciesChosen: chosen,\r\n                    }), this.props.setProficiencies(newProfs, chosen));\r\n                    break;\r\n                }\r\n            } else {\r\n                this.props.updateAlertMessage('You have selected the maximum number of proficiencies from this category');\r\n                break;\r\n            }            \r\n        }\r\n    }\r\n    \r\n    removeProficiency = (proficiencyName, choicesIndex) => {\r\n        const { proficiencies } = this.state;\r\n        const { proficienciesChosen } = this.state;\r\n        for (var a = 0; a < proficienciesChosen.length; a++) {\r\n            for (var b = 0; b < proficienciesChosen[a].length; b++) {\r\n                if (proficienciesChosen[a][b].name === proficiencyName) {                    \r\n                    let newProficiencies = proficiencies.filter(function (proficiency) { return proficiency.name !== proficiencyName });\r\n                    let newChoices = proficienciesChosen;\r\n                    newChoices[choicesIndex] = proficienciesChosen[choicesIndex].filter(function (proficiency) { return proficiency.name !== proficiencyName });\r\n                    this.setState({\r\n                        proficiencies: [...newProficiencies],\r\n                        proficienciesChosen: newChoices,\r\n                    }, this.props.setProficiencies(newProficiencies, newChoices));\r\n                    break;\r\n                }\r\n            }           \r\n        }\r\n    }\r\n\r\n    classProficienciesToChooseFrom() {\r\n        const { classSelected } = this.props;\r\n        const { proficiencies } = this.state;\r\n        const { proficienciesChosen } = this.state;\r\n        let chooseFrom = []\r\n        for (var i = 0; i < classSelected.proficiency_choices.length; i++) {\r\n            let choicesIndex = i;\r\n            const chooseProficiencies = classSelected.proficiency_choices[i].from.map((proficiency) => {\r\n                for (var j = 0; j < proficiencies.length; j++) {\r\n                    for (var k = 0; k < proficienciesChosen[choicesIndex].length; k++) {\r\n                        if (proficiency.name === proficienciesChosen[choicesIndex][k].name) {\r\n                            return (<button className='btn-md btn-secondary' onClick={() => this.removeProficiency(proficiency.name, choicesIndex)} key={proficiency.name}>{proficiency.name}</button>);\r\n                        }\r\n                    }                    \r\n                }\r\n                return (<button className='btn-md btn-primary' onClick={() => this.addProficiency(proficiency.name, choicesIndex)} key={proficiency.name}>{proficiency.name}</button>);\r\n            });\r\n            chooseFrom.push(<div className='col-12 chooseProficiency' key={'catetory' + choicesIndex}>{chooseProficiencies}</div>)\r\n        }\r\n        return (chooseFrom);\r\n    }\r\n\r\n    render() {\r\n          return (<div className='row'>\r\n                    {this.classProficienciesToChooseFrom()}\r\n                </div>);\r\n    }\r\n}\r\n\r\nexport default ClassProficiencies","import React, { Component } from 'react';\r\n\r\nclass ClassSpells extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            classSpells: [], \r\n            spellSlots: [], \r\n            spellsChosen: [],    \r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log(\"ClassSpells mounted:\", this.props);\r\n        \r\n        this.spellSlots();\r\n        this.setClassSpells(1); // character level: 1\r\n    }\r\n    componentDidUpdate() {\r\n        console.log(\"ClassSpells updated: \", this.props);\r\n    }\r\n    spellSlots = () => { // this function assumes the level of the character is already resolved and the data for that level has been retrieved: 'levelData'\r\n        const { classSelected } = this.props;\r\n        const { levelData } = this.props;    \r\n        let slotsAvailable = [];\r\n        if (classSelected.name === 'Ranger' || classSelected.name === 'Paladin') {\r\n            for (var h = 0; h < levelData.length; h++) {\r\n                if (levelData[h].class.name === classSelected.name) {\r\n                    slotsAvailable[0] = 0;\r\n                    for (var i = 1; i < 6; i++) {\r\n                        if (levelData[h].spellcasting['spell_slots_level_' + i] !== 0) {\r\n                            slotsAvailable[i] = levelData[h].spellcasting['spell_slots_level_' + i];\r\n                            console.log(\"SLOTS avail\", slotsAvailable[i])\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            for (var j = 0; j < levelData.length; j++) {\r\n                if (levelData[j].class.name === classSelected.name) {\r\n                    slotsAvailable[0] = levelData[j].spellcasting.cantrips_known;\r\n                    for (var k = 1; k < 10; k++) {\r\n                        if (levelData[j].spellcasting['spell_slots_level_' + k] !== 0) {\r\n                            slotsAvailable[k] = levelData[j].spellcasting['spell_slots_level_' + k];\r\n                        }\r\n                    }\r\n                }\r\n            }            \r\n        } \r\n        console.log(\"slots available \", slotsAvailable);\r\n        this.setState({\r\n            spellSlots: slotsAvailable,\r\n        }, this.props.updateSpellSlots(slotsAvailable));\r\n    }\r\n\r\n    updateSpells = (spell) => {\r\n        const { spellsChosen } = this.props;\r\n        let spells = [...spellsChosen, spell];\r\n        this.setState({\r\n            spellsChosen: spells,\r\n        });\r\n        this.props.setSpells(spells); //parent spells update so Info can display chosen spells\r\n    }\r\n\r\n    spellsChosenByLevel = () => {\r\n        const { spellsChosen } = this.props;\r\n        let cantrips = 0;\r\n        let levelOneSpells = 0;\r\n        let spells = [];\r\n        for (var i = 0; i < spellsChosen.length; i++) {\r\n            if (spellsChosen[i].level === 0) {\r\n                cantrips++;\r\n            } else if (spellsChosen[i].level === 1) {\r\n                levelOneSpells++;\r\n            }\r\n        }\r\n        spells.push(cantrips);\r\n        spells.push(levelOneSpells);\r\n        return spells;\r\n    }\r\n\r\n    spellSource = (spell, currentLevel) => {\r\n        const { classSelected } = this.props;\r\n        const { spellsChosen } = this.props;\r\n        const { spellSlots } = this.state;\r\n        let cantrips = 0;\r\n        let levelOneSpells = 0;\r\n        let level0, level1;\r\n        switch(classSelected.name) {\r\n            case \"Barbarian\":\r\n                break;\r\n            case \"Bard\":\r\n                if (spellsChosen.length === 0) {\r\n                    this.updateSpells(spell);\r\n                    break;\r\n                }\r\n                [level0, level1] = spellSlots; \r\n                [cantrips, levelOneSpells] = this.spellsChosenByLevel();\r\n                if (cantrips < level0 && spell.level === 0) {\r\n                    this.updateSpells(spell);\r\n                    break;\r\n                }\r\n                if (levelOneSpells < level1 && spell.level === 1) {\r\n                    this.updateSpells(spell);\r\n                    break;\r\n                }\r\n                break;\r\n            case \"Cleric\":\r\n                if (spellsChosen.length === 0) {\r\n                    this.updateSpells(spell);\r\n                    break;\r\n                }\r\n                [level0, level1] = spellSlots;\r\n                [cantrips, levelOneSpells] = this.spellsChosenByLevel();\r\n                if (cantrips < level0 && spell.level === 0) {\r\n                    this.updateSpells(spell);\r\n                    break;\r\n                }\r\n\r\n                if (levelOneSpells < level1 && spell.level === 1) {\r\n                    this.updateSpells(spell);\r\n                }\r\n                break;\r\n            case \"Druid\":\r\n                if (spellsChosen.length === 0) {\r\n                    this.updateSpells(spell);\r\n                    break;\r\n                }\r\n                [level0, level1] = spellSlots;\r\n                [cantrips, levelOneSpells] = this.spellsChosenByLevel();\r\n                if (cantrips < level0 && spell.level === 0) {\r\n                    this.updateSpells(spell);\r\n                    break;\r\n                }\r\n                if (levelOneSpells < level1 && spell.level === 1) {\r\n                    this.updateSpells(spell);\r\n                }\r\n                break;\r\n            case \"Fighter\":\r\n                break;\r\n            case \"Monk\":\r\n                break;\r\n            case \"Paladin\":\r\n                if (spellsChosen.length === 0) {\r\n                    this.updateSpells(spell);\r\n                    break;\r\n                }\r\n                [level0, level1] = spellSlots;\r\n                [cantrips, levelOneSpells] = this.spellsChosenByLevel();\r\n                if (cantrips < level0 && spell.level === 0) {\r\n                    this.updateSpells(spell);\r\n                    break;\r\n                }\r\n\r\n                if (levelOneSpells < level1 && spell.level === 1) {\r\n                    this.updateSpells(spell);\r\n                }\r\n                break;\r\n            case \"Ranger\":\r\n                if (spellsChosen.length === 0) {\r\n                    this.updateSpells(spell);\r\n                    break;\r\n                }\r\n                [level0, level1] = spellSlots;\r\n                [cantrips, levelOneSpells] = this.spellsChosenByLevel();\r\n                if (cantrips < level0 && spell.level === 0) {\r\n                    this.updateSpells(spell);\r\n                    break;\r\n                }\r\n                if (levelOneSpells < level1 && spell.level === 1) {\r\n                    this.updateSpells(spell);\r\n                }\r\n                break;\r\n            case \"Rogue\":\r\n                break;\r\n            case \"Sorcerer\":\r\n                if (spellsChosen.length === 0) {\r\n                    this.updateSpells(spell);\r\n                    break;\r\n                }               \r\n                [cantrips, levelOneSpells] = this.spellsChosenByLevel();\r\n                if (cantrips < 4 && spell.level === 0) {\r\n                    this.updateSpells(spell);\r\n                    break;\r\n                }\r\n\r\n                if (levelOneSpells < 2 && spell.level === 1) {\r\n                    this.updateSpells(spell);\r\n                }\r\n                break;\r\n            case \"Warlock\":\r\n                if (spellsChosen.length === 0) {\r\n                    this.updateSpells(spell);\r\n                    break;\r\n                }\r\n                [cantrips, levelOneSpells] = this.spellsChosenByLevel();\r\n                if (cantrips < 2 && spell.level === 0) {\r\n                    this.updateSpells(spell);\r\n                    break;\r\n                }\r\n\r\n                if (levelOneSpells < 2 && spell.level === 1) {\r\n                    this.updateSpells(spell);\r\n                }\r\n                break;\r\n            case \"Wizard\":\r\n                console.log(\"Wizard Spell source. \")\r\n                if (spellsChosen.length === 0) {\r\n                    this.updateSpells(spell);\r\n                    break;\r\n                } \r\n                [cantrips, levelOneSpells] = this.spellsChosenByLevel();\r\n                if (cantrips < 3 && spell.level === 0) {\r\n                    this.updateSpells(spell);\r\n                    break;\r\n                } \r\n                if (levelOneSpells < 6 && spell.level === 1) {\r\n                    this.updateSpells(spell);\r\n                    break;\r\n                } \r\n                let message = \"You cannot add \" + spell.name + \" to your spell book.\";\r\n                this.props.updateAlertMessage(message)\r\n                break;\r\n            default:\r\n                break;\r\n        }              \r\n    }\r\n\r\n    setClassSpells = (level) => { \r\n        const { classSelected } = this.props;\r\n        const { spellsInfo } = this.props;   \r\n        let spells = []\r\n        console.log(\"setClassSpells() fired\")\r\n        switch (level) {\r\n            case 1:\r\n                for (var i = 0; i < spellsInfo.length; i++) {\r\n                    for (var j = 0; j < spellsInfo[i].classes.length; j++) {\r\n                        if (classSelected.name === spellsInfo[i].classes[j].name && (spellsInfo[i].level <= level)) {\r\n                            spells.push(spellsInfo[i])\r\n                        }\r\n                    }\r\n                }\r\n                this.setState({\r\n                    classSpells: spells,\r\n                });\r\n                console.log(\"state classSpells updated\", spells);\r\n                break;\r\n            default: \r\n                alert(\"level of character is invalid in spells creation. \")\r\n        }\r\n    }\r\n    \r\n    addSpell = (spell) => {\r\n        console.log(\"Add Spell: \", spell.name);\r\n        const { setSelectedSpell } = this.props;\r\n        this.spellSource(spell, 1);\r\n        setSelectedSpell(spell)\r\n    }\r\n\r\n    removeSpell = (spell) => {\r\n        const { spellsChosen } = this.props\r\n        const { setSelectedSpell } = this.props\r\n\r\n        let spells = []\r\n\r\n        for (var i = 0; i < spellsChosen.length; i++) {\r\n            if (spellsChosen[i].name !== spell.name) {\r\n                spells.push(spellsChosen[i])\r\n            }\r\n        }\r\n        console.log(\"Spells that wont be removed, \", spells)\r\n        this.setState({\r\n            spellsChosen: spells,\r\n        });\r\n        this.props.setSpells(spells)\r\n        setSelectedSpell({})\r\n    }\r\n\r\n    displaySpells = () => {\r\n        const { classSelected } = this.props;\r\n        const { classSpells } = this.state;\r\n        const { spellSlots } = this.state;\r\n\r\n        const { spellsChosen } = this.props;\r\n        let spellChoices = [];\r\n       \r\n        for (var a = 0; a < spellSlots.length; a++) {         \r\n            const slotLevel = a;\r\n            let slotSpells = classSpells.filter((spell) => {\r\n                return (spell.level === slotLevel ? spell : null);\r\n            });\r\n\r\n            console.log(\"Slots Spells\", slotSpells);\r\n\r\n            spellChoices[slotLevel] = slotSpells.map((spell) => {\r\n                let classNames = \"btn-md spell-btn \";\r\n                    if (spell.damage !== undefined) { // Is there a better check for this?\r\n                        if (spell.damage.damage_type !== undefined) {\r\n                            classNames += spell.damage.damage_type.index;\r\n                        }\r\n                    }\r\n                    if (spellsChosen.length === 0) {\r\n                        return (<button className={classNames} onClick={() => this.addSpell(spell)} key={spell.name + spell.level}>{spell.name}</button>);\r\n                    }\r\n                    for (var b = 0; b < spellsChosen.length; b++) {\r\n                        let chosen = b;\r\n                        if (spellsChosen[chosen].name === spell.name) {                           \r\n                            return (<button className={classNames} onClick={() => this.removeSpell(spell)} key={spell.name + spell.level}>{spell.name}</button>);\r\n                        } \r\n                    }\r\n                return (<button className={classNames} onClick={() => this.addSpell(spell)} key={spell.name + spell.level}>{spell.name}</button>);\r\n            });\r\n\r\n        }\r\n        let spellChoiceDisplay = [];\r\n        for (var b = 0; b < spellChoices.length; b++) {\r\n            if (b === 0) {\r\n                if (classSelected.name === \"Paladin\" || classSelected.name === \"Ranger\") {\r\n                    spellChoiceDisplay[b] = <div className='row' key='cantrips'><div className='col-12'><h6>You have no spells to choose from at level 1</h6></div></div>\r\n                } else {\r\n                    spellChoiceDisplay[b] = <div className='row' key='cantrips'><div className='col-12'><h6>Cantrips</h6>{spellChoices[b]}</div></div>\r\n                }\r\n                \r\n            } else {\r\n                let keyForThee = \"spellLevel\";\r\n                spellChoiceDisplay[b] = <div className='row' key={keyForThee + b}><div className='col-12' ><h6>Spell Level {b}</h6>{spellChoices[b]}</div></div> \r\n            }            \r\n        }\r\n        return (spellChoiceDisplay);\r\n    }  \r\n    \r\n    render() {\r\n        return (<div className='col-12'>{this.displaySpells()}</div>);\r\n    }\r\n}\r\n\r\nexport default ClassSpells;","import React, { Component } from 'react'\r\nimport isSelected from '../helper/helper-functions'\r\n\r\nexport default class CharacterRace extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            raceSelected: {},            \r\n        }\r\n        this.buttons = this.buttons.bind(this);\r\n        this.selectRace = this.selectRace.bind(this);\r\n        console.log(\"Race Constructor\", props);\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (isSelected(this.props.raceSelected)) {\r\n            this.setState({ raceSelected: this.props.raceSelected, });\r\n        }\r\n    }\r\n\r\n    selectRace(index) {\r\n        const { racesInfo } = this.props;\r\n        const { setRace } = this.props;\r\n        for (let i = 0; i < racesInfo.length; i++) {\r\n            if (racesInfo[i].index === index) {\r\n                const raceSelected = racesInfo.filter(function (race) { return race.name === racesInfo[i].name });\r\n                this.setState({ raceSelected: raceSelected[0] });\r\n                setRace(raceSelected[0]); \r\n                break;\r\n            }\r\n        }\r\n    }   \r\n\r\n    buttons() {\r\n        const { races } = this.props\r\n        const { raceSelected } = this.state;              \r\n        let raceButtons = races.results.map((race) => {\r\n            if (isSelected(raceSelected) && raceSelected.index === race.index) {\r\n                return (<button className='selectionButtons buttonSelected col-4 {race.index}' aria-disabled='true' key={race.index}>{race.name}</button>);\r\n            }\r\n            return (<button onClick={() => this.selectRace(race.index)} className='selectionButtons col-4' key={race.index}>{race.name}</button>);\r\n        });\r\n        return raceButtons;\r\n    }\r\n\r\n    render() {\r\n        return (<div className=\"col-12\">\r\n                         {this.buttons()}\r\n                </div>);\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport isSelected from '../helper/helper-functions'\r\n\r\nexport default class CharacterClass extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            classSelected: {},\r\n        }\r\n        this.buttons = this.buttons.bind(this);\r\n        this.selectClass = this.selectClass.bind(this);\r\n    };   \r\n\r\n    componentDidMount() {\r\n        if (isSelected(this.props.classSelected)) {\r\n            this.setState({ classSelected: this.props.classSelected, });\r\n        }\r\n    }\r\n\r\n    selectClass(index) {\r\n        const { classesInfo } = this.props;\r\n        const { setClass } = this.props;\r\n        for (let i = 0; i < classesInfo.length; i++) {\r\n            if (classesInfo[i].index === index) {\r\n                const classSelected = classesInfo.filter(function (cClass) { return cClass.name === classesInfo[i].name });\r\n                this.setState({ classSelected: classSelected[0], });\r\n                setClass(classSelected[0]);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    buttons() {\r\n        const { classes } = this.props\r\n        const { classSelected } = this.state;\r\n\r\n        let classButtons = classes.results.map((characterClass) => {\r\n            if (isSelected(classSelected) && classSelected.index === characterClass.index) {\r\n                //console.log(\"selection disabled for class\");\r\n                return (<button className='selectionButtons buttonSelected col-4' key={characterClass.index}>{characterClass.name}</button>);\r\n            }\r\n            return (<button onClick={() => this.selectClass(characterClass.index)} className='selectionButtons col-4' key={characterClass.index}>{characterClass.name}</button>);\r\n\r\n        });       \r\n        return classButtons;\r\n    }\r\n\r\n    render() {\r\n        return (<div className=\"row\">\r\n                    <div className=\"col-12 text-center selection\">\r\n                        {this.buttons()}\r\n                    </div>\r\n                </div>);\r\n    }\r\n}\r\n\r\n","import React from 'react'\r\nimport AbilityScoresForm from './AbilityScoresForm'\r\nimport ClassProficiencies from './ClassProficiencies'\r\nimport ClassSpells from './ClassSpells'\r\nimport Races from './champion/Races'\r\nimport Classes from './champion/Classes'\r\nimport isSelected from './helper/helper-functions'\r\n\r\nconst Selection = (props) => {\r\n    console.log(\"Selection() props\", props)\r\n\r\n    const abilityScores = props.abilityScores;\r\n    const classSelected = props.classSelected;\r\n    const navigation = props.navigation;\r\n    const getScore = props.getScore;\r\n\r\n    switch (navigation) {\r\n        case 'Races':\r\n            return (<Races {...props} />);           \r\n        case 'Classes':\r\n            return (<div className='col-12 text-center selection'><Classes {...props} /></div>); \r\n        case 'Proficiencies':\r\n            if (isSelected(classSelected)) {\r\n                return (<div className='col-12 text-center selection'>\r\n                            <ClassProficiencies {...props}/>\r\n                        </div>);\r\n            }\r\n            return (<div className='col-12 text-center selection'>You must first choose a class, before you can select your proficiencies.</div>)\r\n            \r\n        case 'Spells':\r\n            if (isSelected(classSelected) && classSelected.spellcasting !== undefined) {\r\n                return (<div className='col-12 text-center selection'>\r\n                            <ClassSpells {...props} />\r\n                        </div>);\r\n            }\r\n            return (<div className='col-12 text-center selection'>{classSelected.name} is not a spell caster.</div>);\r\n            \r\n        case 'Ability-Scores':\r\n            let scores = abilityScores.results.map((abilityScore, index) => {\r\n                return (<button onClick={() => getScore(abilityScore.index)} className='col-2 abilityScoresSelection' key={index}>{abilityScore.name}</button>)\r\n            });\r\n            return (\r\n                <div className='col-12 text-center selection'>\r\n                    <div className='row'>\r\n                        <div className='col-12'>\r\n                            {scores}\r\n                        </div>\r\n                        <AbilityScoresForm handleSubmit={props.handleSubmit} />\r\n                    </div>\r\n\r\n                </div>\r\n            );\r\n        default:\r\n            return (<div className='col-12 text-center selection'>DEFAULT: It's a broke!</div>);\r\n    }    \r\n}\r\n\r\n//<div className='row'>\r\n    //<div className='col-12'>\r\n    //    <AbilityScoresForm handleSubmit={props.handleSubmit} />\r\n    //</div>\r\n//</div>\r\n\r\nexport default Selection ","import React from 'react'\r\nimport isSelected from './helper/helper-functions'\r\n\r\nconst Navigation = (props) => {\r\n //   console.log(\"Navigation\", props)\r\n    const navigation = props.navigation\r\n    const navigationCategories = props.navigationCategories\r\n    const navigate = props.navigate\r\n    const classSelected = props.classSelected\r\n\r\n    let navButtons = navigationCategories.map((category, index) => {\r\n        if (isSelected(classSelected)) {\r\n            if (navigation === category) {\r\n                return (<button className='navigationButtons buttonSelected disabled' tabIndex='-1' aria-disabled='true' key={index}>{category}</button>);\r\n            } else {\r\n                return (<button onClick={() => navigate(category)} className='navigationButtons' key={index}>{category}</button>);\r\n            }\r\n        } else {\r\n            if (navigation === category) {\r\n                return (<button className='navigationButtons buttonSelected disabled' tabIndex='-1' aria-disabled='true' key={index}>{category}</button>);\r\n            } else {\r\n                if (category === 'Classes' && (navigation === 'Proficiencies' || navigation === 'Spells')) {\r\n                    switch (navigation) {\r\n                        case 'Proficiencies':\r\n                            return (<button onClick={() => navigate(category)} className='navigationButtons shiny' key={index}>{category}</button>);\r\n                        default:\r\n                            return (<button onClick={() => navigate(category)} className='navigationButtons shinyBlue' key={index}>{category}</button>);\r\n                    }     \r\n                } else {\r\n                    return (<button onClick={() => navigate(category)} className='navigationButtons' key={index}>{category}</button>);\r\n                }\r\n            }\r\n        }                \r\n    });\r\n    return (<div className=\"col-12 text-center navigation\">\r\n                {navButtons}\r\n            </div>);\r\n}\r\nexport default Navigation","import React from 'react'\r\n\r\nconst UserAlert = (props) => { //this needs better validation against invalid messages\r\n    console.log(\"userAlert props\", props);\r\n\r\n    let element = (<div className='row' id='alert'></div>);\r\n    if (props.alertMessage.length > 0) {\r\n        element = (<div className='row' id='alert'>\r\n            <div className='col text-center'>\r\n                {props.alertMessage}\r\n            </div>\r\n        </div>);\r\n    }\r\n    return (element);\r\n}\r\n\r\nexport default UserAlert;\r\n","import React, { Component } from 'react'\r\n\r\nimport Info from './Info'\r\nimport Selection from './Selection'\r\nimport Navigation from './Navigation'\r\n//import CharacterSave from './CharacterSave'\r\n//import isSelected from './helper/helper-functions'\r\nimport UserAlert from './helper/Alert'\r\n//import GOOFING from './GOOFING'\r\n\r\nclass CreateCharacter extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            abilityScoresSelected: {},\r\n            navigationCategories: ['Races', 'Classes', 'Ability-Scores', 'Proficiencies', 'Spells'],\r\n            navigation: 'Races',\r\n            classSelected: {},\r\n            raceSelected: {},\r\n            proficiencies: [],\r\n            proficienciesChoices: [],\r\n            proficienciesChosen: [],\r\n            spellsChosen: [],\r\n            spellSlots: [],\r\n            selectedSpell: {},\r\n            alertMessage: \"\",\r\n            updateSpellSlots: this.updateSpellSlots,\r\n            updateAlertMessage: this.updateAlertMessage,\r\n            setSelectedSpell: this.setSelectedSpell,\r\n            setProficiencies: this.setProficiencies,\r\n            startingProficiencies: this.startingProficiencies,\r\n            updateProficiencies: this.updateProficiencies,\r\n            setSpells: this.setSpells,\r\n        }\r\n        //this.updateSpellsSlots = this.updateSpellSlots.bind(this);\r\n        //this.updateAlertMessage = this.updateAlertMessage.bind(this);\r\n        //this.updateSelectedSpell = this.updateSelectedSpell.bind(this);\r\n        //this.isClassSelected = this.isClassSelected.bind(this);\r\n        //this.isRaceSelected = this.isRaceSelected.bind(this);\r\n        this.setRace = this.setRace.bind(this);\r\n        this.setClass = this.setClass.bind(this);\r\n    }\r\n    \r\n    componentDidMount() {\r\n        const { abilityScores } = this.props;\r\n        this.abilityScoresSetup(abilityScores);\r\n        console.log(\"CreateCharacter mounted\")\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        console.log(\"CreateCharacter updated\")\r\n    }\r\n\r\n\r\n    abilityScoresSetup = (abilityScoresData) => {\r\n        const { count } = abilityScoresData;\r\n        const { results } = abilityScoresData;\r\n        let abilityScores = {};\r\n        for (var j = 0; j < count; j++) {\r\n            let ability = results[j].index;\r\n            abilityScores[ability] = 0;\r\n        }\r\n        this.setState({ abilityScoresSelected: abilityScores, });\r\n    }\r\n\r\n    updateAlertMessage = (message) => {\r\n        this.setState({ alertMessage: message }, this.fadeMessage()); \r\n    }\r\n\r\n    fadeMessage = () => { // FIX THIS!!! AAAAAAAAAAAA!!!!!!\r\n        const alertNode = document.getElementById('alert');\r\n\r\n        //const alertNode = document.createElement(\"div\");\r\n        //alertNode.setAttribute(\"className\", \"alert\");\r\n        //document.body.appendChild(\"alertNode\");\r\n        setTimeout(() => {\r\n            let fade = setInterval(() => {\r\n                if (!alertNode.style.opacity) {\r\n                   alertNode.style.opacity = 1;\r\n                }\r\n                if (alertNode.style.opacity > 0) {\r\n                    alertNode.style.opacity -= 0.01;\r\n                } else {\r\n                    clearInterval(fade);\r\n                }\r\n            }, 10);// If I do not wait the 10 seconds, it craps on my parade!\r\n        }, 1700);\r\n        this.setState({ alertMessage: \"\" });\r\n        alertNode.style.opacity = 1;\r\n    }\r\n\r\n    setSelectedSpell = (spell) => {\r\n        this.setState({ selectedSpell: spell, });\r\n    }\r\n\r\n    setSpells = (spells) => {\r\n        this.setState({\r\n            spellsChosen: spells,\r\n        });\r\n    }\r\n\r\n    updateSpellSlots = (slots) => {\r\n        this.setState({ spellSlots: slots, });\r\n    }\r\n\r\n    navigate = (category) => {\r\n        this.setState({ navigation: category, });\r\n    }\r\n\r\n    getScore = (ability) => {\r\n        const { abilityScores } = this.props;\r\n        const { abilityScoresSelected } = this.state;\r\n        let scores = abilityScoresSelected\r\n        for (var i = 0; i < abilityScores.count; i++) {\r\n            if (abilityScores.results[i].index === ability) {\r\n                scores[ability] = this.randomDiceRoll(6)\r\n                this.setState({abilityScoresSelected: scores})\r\n                break;\r\n            }\r\n        }\r\n   //     console.log(\"Ability Scores Selected\", abilityScoresSelected[ability])\r\n    }\r\n\r\n    randomDiceRoll = (maxNum) => { // may need to extend this to accept two additional arguments: total rolls to roll, and total rolls to keep \r\n        let totalDiceRolls = 5;\r\n        let totalRollsToKeep = 3;\r\n        let abilityPoint = 0;\r\n        let abilityPoints = 0;\r\n        let abilityPointsArray = [];\r\n        for (var i = 0; i < totalDiceRolls; i++) {\r\n            abilityPoint = Math.floor((Math.random() * maxNum) + 1);\r\n            abilityPointsArray.push(abilityPoint);\r\n        }\r\n        abilityPointsArray.sort()\r\n        abilityPointsArray.splice(0, totalDiceRolls - totalRollsToKeep)\r\n        for (var j = 0; j < abilityPointsArray.length; j++) {\r\n            abilityPoints += abilityPointsArray[j];\r\n        }\r\n        return abilityPoints;\r\n    }    \r\n\r\n    setRace(chosenRace) {\r\n        this.setState({ raceSelected: chosenRace, });\r\n    }\r\n\r\n    setClass(chosenClass) {\r\n        this.setState({ classSelected: chosenClass, spellsChosen: [], selectedSpell: {}, proficiencies: chosenClass.proficiencies, proficienciesChosen: [] });\r\n    }\r\n    \r\n    startingProficiencies = (proficiencies) => {\r\n        this.setState({ proficiencies: proficiencies });\r\n    }\r\n\r\n    setProficiencies = (proficiencies, choices) => {\r\n        console.log(\"SET PROFICIENCIES\", proficiencies)\r\n        this.setState({\r\n            proficiencies: proficiencies,\r\n            proficienciesChosen: choices,\r\n        });\r\n    }\r\n       \r\n    updateProficiencies = (proficiencies, choices) => {\r\n        this.setState({\r\n            proficiencies: proficiencies,\r\n            proficienciesChoices: choices,\r\n        });\r\n    }    \r\n\r\n    //isRaceSelected = (raceSelected) => {\r\n    //    return (this.isSelected(raceSelected));\r\n    //}\r\n\r\n    //isClassSelected = (classSelected) => {\r\n    //    return (this.isSelected(classSelected));\r\n    //}\r\n\r\n    //isSelected = (obj) => {\r\n    //    for (var key in obj) {\r\n    //        obj.hasOwnProperty(key)\r\n    //        return true;\r\n    //    }\r\n    //    return false;\r\n    //}\r\n\r\n    handleSubmit = (abilities) => { //needs tending too, add better out of bounds messages...and how its handled \r\n        const { abilityScoresSelected } = this.state\r\n        let scores = abilityScoresSelected\r\n        let noZeroes = []\r\n        for (var i = 0; i < abilities.length; i++) {\r\n            if (abilities[i].value < 3 || abilities[i].value > 18) { //needs better validation\r\n                noZeroes.push(abilities[i].name);\r\n            } else {\r\n                scores[abilities[i].name] = parseInt(abilities[i].value, 10)\r\n                this.setState({ abilityScoresSelected: scores })\r\n            }\r\n        }\r\n        if (noZeroes.length > 0) {\r\n            let zeroesAlert = \"Ability Scores must not be 0, you currently have 0 in: \";\r\n            for (var k = 0; k < noZeroes.length; k++) {\r\n                if (k < noZeroes.length - 1) {\r\n                    zeroesAlert += noZeroes[k] + \", \";\r\n                } else {\r\n                    zeroesAlert += noZeroes[k];\r\n                }\r\n            }\r\n            zeroesAlert += \".\";\r\n            this.updateAlertMessage(zeroesAlert);\r\n        }\r\n    }\r\n       \r\n    render() {\r\n       // const { navigationCategories, navigation, } = this.state\r\n        \r\n        return (<div id='creator' className='container-fluid creation'>\r\n            <UserAlert alertMessage={this.state.alertMessage} />\r\n            <div className='row'>\r\n                <Info {...this.state} {...this.props} />\r\n            </div>\r\n            <div className='row'>\r\n                <Selection {...this.state} {...this.props} setRace={this.setRace} setClass={this.setClass} handleSubmit={this.handleSubmit} getScore={this.getScore} />\r\n            </div>\r\n            <div className='row'>\r\n                <Navigation {...this.state} {...this.props} navigate={this.navigate} />\r\n            </div>           \r\n        </div>);\r\n    }\r\n}\r\n\r\n//<div className='row'>\r\n//    <CharacterSave {...this.state} />\r\n//</div>\r\n//<GOOFING />\r\n\r\n\r\n\r\nexport default CreateCharacter","import React, { Component } from 'react'\r\nimport CreateCharacter from './CreateCharacter'\r\n\r\nexport default class App extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.initialState = {\r\n            ////////\r\n            races: {},\r\n            racesInfo: [],\r\n            ////////\r\n            classes: {},\r\n            classesInfo: [],\r\n            ////////\r\n            abilityScores: {},\r\n            abilityScoresInfo: [],\r\n            ////////\r\n            spells: {},\r\n            spellsInfo: [],\r\n            ////////\r\n            features: {},\r\n            featuresInfo: [],\r\n            ////////\r\n            levelData: [],\r\n        }\r\n        this.state = this.initialState;\r\n    }\r\n\r\n    componentDidMount() {\r\n        const url = 'https://www.dnd5eapi.co/api/'\r\n        fetch(url + \"races\")\r\n            .then(result => result.json())\r\n            .then(result => { this.setState({ races: result }, this.getInfo(result, 'races')) })\r\n            .catch(e => { console.log(e + \" -- \" + url);})\r\n        fetch(url + 'classes')\r\n            .then(result => result.json())\r\n            .then(result => { this.setState({ classes: result }, this.getInfo(result, 'classes')) })\r\n            .catch(e => { console.log(\"API Request Error: \", e); });\r\n        fetch(url + 'ability-scores')\r\n            .then(result => result.json())\r\n            .then(result => { this.setState({ abilityScores: result }, this.getInfo(result, 'ability-scores')) })\r\n            .catch(e => { console.log(\"API Request Error: \", e); });\r\n        fetch(url + 'spells')\r\n            .then(result => result.json())\r\n            .then(result => { this.setState({ spells: result }, this.getInfo(result, 'spells')) })\r\n            .catch(e => { console.log(\"API Request Error: \", e); });\r\n        \r\n        fetch(url + 'features')\r\n            .then(result => result.json())\r\n            .then(result => { this.setState({ features: result }, this.getInfo(result, 'features')) });\r\n     //   console.log(\"App mounted: \", this.state);\r\n    }\r\n\r\n\r\n    componentDidUpdate() {\r\n        //let keys = Object.getOwnPropertyNames(this.state)\r\n        //if (this.props.userID !== prevProps.userID) {\r\n        //    this.fetchData(this.props.userID);\r\n        //}\r\n     //   console.log(\"App updated: \", this.state);\r\n    }\r\n\r\n    getLevelData(data, currentLevel) {\r\n        let levels = []\r\n        const url = 'https://www.dnd5eapi.co'\r\n        for (var i = 0; i < data.results.length; i++) {\r\n            fetch(url + \"/api/classes/\" + data.results[i].index + \"/levels/\" + currentLevel)\r\n                .then(result => result.json())\r\n                .then(result => levels.push(result))\r\n        }\r\n        this.setState({\r\n            levelData: levels,\r\n        });\r\n    }\r\n\r\n    getInfo(data, category) {\r\n        let info = []\r\n        const url = 'https://www.dnd5eapi.co'\r\n        for (var i = 0; i < data.results.length; i++) {\r\n            fetch(url + data.results[i].url)\r\n                .then(result => result.json())\r\n                .then(result => info.push(result))\r\n        }\r\n        switch(category) {\r\n            case 'races':\r\n                this.setState({ racesInfo: info, });\r\n            break;\r\n            case 'classes':\r\n                this.setState({ classesInfo: info, }, this.getLevelData(data, 1));\r\n                break;\r\n            case 'ability-scores':\r\n                this.setState({ abilityScoresInfo: info, });\r\n                break;\r\n            case 'spells':\r\n                this.setState({ spellsInfo: info, });\r\n                break;\r\n            case 'features':\r\n                this.setState({ featuresInfo: info, })\r\n                break;\r\n            default:\r\n        }\r\n    }\r\n\r\n    readyToCreate = () => {\r\n        const data = this.state;\r\n        for (var key in data) {\r\n            switch (Object.getPrototypeOf(data[key]).constructor) {\r\n                case Array:\r\n                 //   console.log(\"Array\");\r\n                    break;\r\n                case Object:\r\n                  //  console.log(\"Object\");\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n            \r\n            //console.log(\"KEY:\", Object.getPrototypeOf(data[key]).constructor);\r\n            //if (Object.getPrototypeOf(data[key]) === 'object') {\r\n            //    console.log(\"Object: \", key)\r\n            //}\r\n        }\r\n    }\r\n\r\n          \r\n    render() {\r\n        const { races } = this.state;\r\n        const { classes } = this.state;\r\n        const { abilityScores } = this.state;\r\n        const { spells } = this.state;\r\n        const { spellsInfo } = this.state;\r\n        const { features } = this.state;\r\n        const { levelData } = this.state;\r\n       // this.readyToCreate();\r\n        if (races.results === undefined || classes.results === undefined || abilityScores.results === undefined || spells.results === undefined || spellsInfo.length === spells.count || levelData.length === 12 || features.results === undefined) {\r\n            return (<div className=\"container-fluid\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12 text-center\">\r\n                                <p>...Loading API</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>);\r\n        } else {\r\n            return (<CreateCharacter {...this.state} />); \r\n        }\r\n    }\r\n}","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\n//import GOOFING from './GOOFING'\r\nimport './assets/css/style.css'\r\n\r\nReactDOM.render(<App />, document.getElementById('root')) \r\n//ReactDOM.render(<GOOFING />, document.getElementById('root'))"],"sourceRoot":""}